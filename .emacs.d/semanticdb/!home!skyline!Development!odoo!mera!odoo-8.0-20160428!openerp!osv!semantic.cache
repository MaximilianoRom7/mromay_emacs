;; Object osv/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "osv/"
  :tables (list 
   (semanticdb-table "fields.py"
    :major-mode 'python-mode
    :tags 
        '( ("\"\"\" Fields:
      - simple
      - relations (one2many, many2one, many2many)
      - function

    Fields Attributes:
        * _classic_read: is a classic sql fields
        * _type   : field type
        * _auto_join: for one2many and many2one fields, tells whether select
            queries will join the relational table instead of replacing the
            field condition by an equivalent-one based on a search.
        * readonly
        * required
        * size
\"\"\"" code nil nil [980 1455])
            ("base64" include nil nil [1457 1470])
            ("datetime" include nil nil [1471 1492])
            ("functools" include nil nil [1493 1509])
            ("logging" include nil nil [1510 1524])
            ("pytz" include nil nil [1525 1536])
            ("re" include nil nil [1537 1546])
            ("xmlrpclib" include nil nil [1547 1563])
            ("operator" include nil nil [1564 1595])
            ("psycopg2" include nil nil [1596 1623])
            ("openerp" include nil nil [1625 1639])
            ("openerp.tools" include nil nil [1640 1669])
            ("openerp.sql_db" include nil nil [1670 1707])
            ("openerp.tools.translate" include nil nil [1708 1745])
            ("openerp.tools" include nil nil [1746 1822])
            ("simplejson" include nil nil [1823 1840])
            ("openerp" include nil nil [1841 1873])
            ("_get_cursor" variable nil nil [1926 1950])
            ("EMPTY_DICT" variable nil nil [1952 1977])
            ("_logger" variable nil nil [1979 2016])
            ("pdb" include nil nil [2018 2028])
            ("_symbol_set" function (:arguments 
              ( ("symb" variable nil (reparse-symbol function_parameters) [2046 2050]))              ) nil [2030 2204])
            ("_column" type
               (:documentation " Base of all fields, a database column

        An instance of this object is a *description* of a database column. It will
        not hold any data, but only provide the methods to manipulate data of an
        ORM record or even prepare/update the database to hold such a field of data.
    "
                :superclasses ("object")
                :members 
                  ( ("_classic_read" variable nil (reparse-symbol indented_block_body) [2538 2558])
                    ("_classic_write" variable nil (reparse-symbol indented_block_body) [2563 2584])
                    ("_auto_join" variable nil (reparse-symbol indented_block_body) [2589 2607])
                    ("_properties" variable nil (reparse-symbol indented_block_body) [2612 2631])
                    ("_type" variable nil (reparse-symbol indented_block_body) [2636 2653])
                    ("_obj" variable nil (reparse-symbol indented_block_body) [2658 2669])
                    ("_multi" variable nil (reparse-symbol indented_block_body) [2674 2688])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [2693 2709])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [2714 2737])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [2742 2778])
                    ("_symbol_get" variable nil (reparse-symbol indented_block_body) [2783 2801])
                    ("_deprecated" variable nil (reparse-symbol indented_block_body) [2806 2825])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [2831 3444])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"

        The 'manual' keyword argument specifies if the field is a custom one.
        It corresponds to the 'state' column in ir_model_fields.

        \"\"\"" code nil (reparse-symbol indented_block_body) [3665 3825])
                            ("args" variable nil (reparse-symbol indented_block_body) [3878 3915])
                            ("args" variable nil (reparse-symbol indented_block_body) [3924 3947])
                            ("args" variable nil (reparse-symbol indented_block_body) [3956 3991])
                            ("args" variable nil (reparse-symbol indented_block_body) [4000 4027])
                            ("args" variable nil (reparse-symbol indented_block_body) [4036 4063])
                            ("args" variable nil (reparse-symbol indented_block_body) [4072 4096])
                            ("args" variable nil (reparse-symbol indented_block_body) [4105 4131])
                            ("args" variable nil (reparse-symbol indented_block_body) [4140 4163])
                            ("args" variable nil (reparse-symbol indented_block_body) [4172 4199])
                            ("args" variable nil (reparse-symbol indented_block_body) [4208 4247])
                            ("args" variable nil (reparse-symbol indented_block_body) [4256 4275])
                            ("None" code nil (reparse-symbol indented_block_body) [4337 4341])
                            ("args" variable nil (reparse-symbol indented_block_body) [4350 4379])
                            ("args" variable nil (reparse-symbol indented_block_body) [4388 4411])
                            ("args" variable nil (reparse-symbol indented_block_body) [4420 4443])
                            ("args" variable nil (reparse-symbol indented_block_body) [4452 4492])
                            ("args" variable nil (reparse-symbol indented_block_body) [4501 4539])
                            ("args" variable nil (reparse-symbol indented_block_body) [4548 4597])
                            ("args" variable nil (reparse-symbol indented_block_body) [4606 4663])
                            ("args" variable nil (reparse-symbol indented_block_body) [4672 4713])
                            ("args" variable nil (reparse-symbol indented_block_body) [4722 4771])
                            ("args" variable nil (reparse-symbol indented_block_body) [4780 4827])
                            ("self" variable nil (reparse-symbol indented_block_body) [4837 4860])
                            ("for" code nil (reparse-symbol indented_block_body) [4869 4939])
                            ("if" code nil (reparse-symbol indented_block_body) [5021 5118]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3463 3467])
                            ("string" variable nil (reparse-symbol function_parameters) [3469 3475])
                            ("required" variable nil (reparse-symbol function_parameters) [3487 3495])
                            ("readonly" variable nil (reparse-symbol function_parameters) [3503 3511])
                            ("domain" variable nil (reparse-symbol function_parameters) [3519 3525])
                            ("context" variable nil (reparse-symbol function_parameters) [3530 3537])
                            ("states" variable nil (reparse-symbol function_parameters) [3542 3548])
                            ("priority" variable nil (reparse-symbol function_parameters) [3555 3563])
                            ("change_default" variable nil (reparse-symbol function_parameters) [3567 3581])
                            ("size" variable nil (reparse-symbol function_parameters) [3589 3593])
                            ("ondelete" variable nil (reparse-symbol function_parameters) [3600 3608])
                            ("translate" variable nil (reparse-symbol function_parameters) [3615 3624])
                            ("select" variable nil (reparse-symbol function_parameters) [3632 3638])
                            ("manual" variable nil (reparse-symbol function_parameters) [3646 3652])
                            ("args" variable nil (reparse-symbol function_parameters) [3660 3666]))                          
                        :documentation "

        The 'manual' keyword argument specifies if the field is a custom one.
        It corresponds to the 'state' column in ir_model_fields.

        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3450 5130])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5151 5155])
                            ("name" variable nil (reparse-symbol function_parameters) [5157 5161]))                          
                        :documentation " Access a non-slot attribute. ")
                        (reparse-symbol indented_block_body) [5135 5389])
                    ("__setattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5410 5414])
                            ("name" variable nil (reparse-symbol function_parameters) [5416 5420])
                            ("value" variable nil (reparse-symbol function_parameters) [5422 5427]))                          
                        :documentation " Set a slot or non-slot attribute. ")
                        (reparse-symbol indented_block_body) [5394 5728])
                    ("__delattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5749 5753])
                            ("name" variable nil (reparse-symbol function_parameters) [5755 5759]))                          
                        :documentation " Remove a non-slot attribute. ")
                        (reparse-symbol indented_block_body) [5733 5917])
                    ("new" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5930 5934])
                            ("_computed_field" variable nil (reparse-symbol function_parameters) [5936 5951])
                            ("args" variable nil (reparse-symbol function_parameters) [5959 5965]))                          
                        :documentation " Return a column like `self` with the given parameters; the parameter
            `_computed_field` tells whether the corresponding field is computed.
        ")
                        (reparse-symbol indented_block_body) [5922 6401])
                    ("to_field" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6419 6423]))                          
                        :documentation " convert column `self` to a new-style field ")
                        (reparse-symbol indented_block_body) [6406 6604])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6627 6631]))                          
                        :documentation " return a dictionary with all the arguments to pass to the field ")
                        (reparse-symbol indented_block_body) [6609 7551])
                    ("restart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7568 7572]))                          )
                        (reparse-symbol indented_block_body) [7556 7588])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7601 7605])
                            ("cr" variable nil (reparse-symbol function_parameters) [7607 7609])
                            ("obj" variable nil (reparse-symbol function_parameters) [7611 7614])
                            ("id" variable nil (reparse-symbol function_parameters) [7616 7618])
                            ("name" variable nil (reparse-symbol function_parameters) [7620 7624])
                            ("value" variable nil (reparse-symbol function_parameters) [7626 7631])
                            ("user" variable nil (reparse-symbol function_parameters) [7633 7637])
                            ("context" variable nil (reparse-symbol function_parameters) [7644 7651]))                          )
                        (reparse-symbol indented_block_body) [7593 7786])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7799 7803])
                            ("cr" variable nil (reparse-symbol function_parameters) [7805 7807])
                            ("obj" variable nil (reparse-symbol function_parameters) [7809 7812])
                            ("ids" variable nil (reparse-symbol function_parameters) [7814 7817])
                            ("name" variable nil (reparse-symbol function_parameters) [7819 7823])
                            ("user" variable nil (reparse-symbol function_parameters) [7825 7829])
                            ("offset" variable nil (reparse-symbol function_parameters) [7836 7842])
                            ("context" variable nil (reparse-symbol function_parameters) [7846 7853])
                            ("values" variable nil (reparse-symbol function_parameters) [7860 7866]))                          )
                        (reparse-symbol indented_block_body) [7791 7927])
                    ("search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7943 7947])
                            ("cr" variable nil (reparse-symbol function_parameters) [7949 7951])
                            ("obj" variable nil (reparse-symbol function_parameters) [7953 7956])
                            ("args" variable nil (reparse-symbol function_parameters) [7958 7962])
                            ("name" variable nil (reparse-symbol function_parameters) [7964 7968])
                            ("value" variable nil (reparse-symbol function_parameters) [7970 7975])
                            ("offset" variable nil (reparse-symbol function_parameters) [7977 7983])
                            ("limit" variable nil (reparse-symbol function_parameters) [7987 7992])
                            ("uid" variable nil (reparse-symbol function_parameters) [7999 8002])
                            ("context" variable nil (reparse-symbol function_parameters) [8009 8016]))                          )
                        (reparse-symbol indented_block_body) [7932 8234])
                    ("as_display_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8259 8263])
                            ("cr" variable nil (reparse-symbol function_parameters) [8265 8267])
                            ("uid" variable nil (reparse-symbol function_parameters) [8269 8272])
                            ("obj" variable nil (reparse-symbol function_parameters) [8274 8277])
                            ("value" variable nil (reparse-symbol function_parameters) [8279 8284])
                            ("context" variable nil (reparse-symbol function_parameters) [8286 8293]))                          
                        :documentation "Converts a field value to a suitable string representation for a record,
           e.g. when this field is used as ``rec_name``.

           :param obj: the ``BaseModel`` instance this column belongs to 
           :param value: a proper value as returned by :py:meth:`~openerp.orm.osv.BaseModel.read`
                         for this column
        ")
                        (reparse-symbol indented_block_body) [8239 8846])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [8889 8892])
                            ("field" variable nil (reparse-symbol function_parameters) [8894 8899])
                            ("cr" variable nil (reparse-symbol function_parameters) [8901 8903])
                            ("uid" variable nil (reparse-symbol function_parameters) [8905 8908])
                            ("obj" variable nil (reparse-symbol function_parameters) [8910 8913])
                            ("value" variable nil (reparse-symbol function_parameters) [8915 8920])
                            ("context" variable nil (reparse-symbol function_parameters) [8922 8929]))                          )
                        (reparse-symbol indented_block_body) [8851 9082]))                  
                :type "class")
                nil [2206 9082])
            ("boolean" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [9247 9264])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [9269 9285])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [9290 9306])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [9311 9347])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [9352 9366])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [9430 9501])
                            ("if" code nil (reparse-symbol indented_block_body) [9510 9751]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9385 9389])
                            ("string" variable nil (reparse-symbol function_parameters) [9391 9397])
                            ("required" variable nil (reparse-symbol function_parameters) [9409 9417])
                            ("args" variable nil (reparse-symbol function_parameters) [9425 9431]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9372 9763]))                  
                :type "class")
                nil [9219 9763])
            ("integer" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [9792 9809])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [9814 9830])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [9835 9868])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [9873 9909])
                    ("_symbol_get" variable nil (reparse-symbol indented_block_body) [9914 9949])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [9954 9968])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [10032 10103]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9987 9991])
                            ("string" variable nil (reparse-symbol function_parameters) [9993 9999])
                            ("required" variable nil (reparse-symbol function_parameters) [10011 10019])
                            ("args" variable nil (reparse-symbol function_parameters) [10027 10033]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9974 10116]))                  
                :type "class")
                nil [9764 10116])
            ("reference" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [10147 10166])
                    ("_classic_read" variable nil (reparse-symbol indented_block_body) [10171 10192])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [10237 10262])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [10322 10450])
                            ("_column" code nil (reparse-symbol indented_block_body) [10458 10535]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10281 10285])
                            ("string" variable nil (reparse-symbol function_parameters) [10287 10293])
                            ("selection" variable nil (reparse-symbol function_parameters) [10295 10304])
                            ("size" variable nil (reparse-symbol function_parameters) [10306 10310])
                            ("args" variable nil (reparse-symbol function_parameters) [10317 10323]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [10268 10548])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10571 10575]))                          )
                        (reparse-symbol indented_block_body) [10553 10695])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10708 10712])
                            ("cr" variable nil (reparse-symbol function_parameters) [10714 10716])
                            ("obj" variable nil (reparse-symbol function_parameters) [10718 10721])
                            ("ids" variable nil (reparse-symbol function_parameters) [10723 10726])
                            ("name" variable nil (reparse-symbol function_parameters) [10728 10732])
                            ("uid" variable nil (reparse-symbol function_parameters) [10734 10737])
                            ("context" variable nil (reparse-symbol function_parameters) [10744 10751])
                            ("values" variable nil (reparse-symbol function_parameters) [10758 10764]))                          )
                        (reparse-symbol indented_block_body) [10700 11158])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [11201 11204])
                            ("field" variable nil (reparse-symbol function_parameters) [11206 11211])
                            ("cr" variable nil (reparse-symbol function_parameters) [11213 11215])
                            ("uid" variable nil (reparse-symbol function_parameters) [11217 11220])
                            ("obj" variable nil (reparse-symbol function_parameters) [11222 11225])
                            ("value" variable nil (reparse-symbol function_parameters) [11227 11232])
                            ("context" variable nil (reparse-symbol function_parameters) [11234 11241]))                          )
                        (reparse-symbol indented_block_body) [11163 11694]))                  
                :type "class")
                nil [10117 11694])
            ("_symbol_set_char" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [11790 11794])
                    ("symb" variable nil (reparse-symbol function_parameters) [11796 11800]))                  )
                nil [11769 12272])
            ("char" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [12298 12312])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [12317 12377])
                    ("__init__" function
                       (:suite 
                          ( ("_column" code nil (reparse-symbol indented_block_body) [12436 12500])
                            ("self" variable nil (reparse-symbol indented_block_body) [12584 12660])
                            ("self" variable nil (reparse-symbol indented_block_body) [12669 12720]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12396 12400])
                            ("string" variable nil (reparse-symbol function_parameters) [12402 12408])
                            ("size" variable nil (reparse-symbol function_parameters) [12420 12424])
                            ("args" variable nil (reparse-symbol function_parameters) [12431 12437]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [12383 12733]))                  
                :type "class")
                nil [12273 12733])
            ("text" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [12759 12773])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [12778 12792]))                  
                :type "class")
                nil [12734 12793])
            ("html" type
               (:superclasses ("text")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [12817 12831])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [12836 12852])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [12857 12926])
                    ("_symbol_set_html" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12953 12957])
                            ("value" variable nil (reparse-symbol function_parameters) [12959 12964]))                          )
                        (reparse-symbol indented_block_body) [12932 13158])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [13239 13288])
                            ("self" variable nil (reparse-symbol indented_block_body) [13297 13322])
                            ("self" variable nil (reparse-symbol indented_block_body) [13331 13362])
                            ("self" variable nil (reparse-symbol indented_block_body) [13443 13481])
                            ("self" variable nil (reparse-symbol indented_block_body) [13490 13541]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13176 13180])
                            ("string" variable nil (reparse-symbol function_parameters) [13182 13188])
                            ("sanitize" variable nil (reparse-symbol function_parameters) [13200 13208])
                            ("strip_style" variable nil (reparse-symbol function_parameters) [13215 13226])
                            ("args" variable nil (reparse-symbol function_parameters) [13234 13240]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [13163 13554])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13577 13581]))                          )
                        (reparse-symbol indented_block_body) [13559 13743]))                  
                :type "class")
                nil [12795 13743])
            ("__builtin__" include nil nil [13744 13762])
            ("_symbol_set_float" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [13786 13790])
                    ("x" variable nil (reparse-symbol function_parameters) [13792 13793]))                  )
                nil [13764 14026])
            ("float" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [14053 14068])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [14073 14089])
                    ("_symbol_get" variable nil (reparse-symbol indented_block_body) [14094 14131])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [14136 14206])
                    ("digits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14237 14241]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [14212 14408])
                    ("__init__" function
                       (:suite 
                          ( ("_column" code nil (reparse-symbol indented_block_body) [14505 14569])
                            ("self" variable nil (reparse-symbol indented_block_body) [14640 14661])
                            ("self" variable nil (reparse-symbol indented_block_body) [14670 14707])
                            ("self" variable nil (reparse-symbol indented_block_body) [14716 14769])
                            ("self" variable nil (reparse-symbol indented_block_body) [14778 14829]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14426 14430])
                            ("string" variable nil (reparse-symbol function_parameters) [14432 14438])
                            ("digits" variable nil (reparse-symbol function_parameters) [14450 14456])
                            ("digits_compute" variable nil (reparse-symbol function_parameters) [14463 14477])
                            ("required" variable nil (reparse-symbol function_parameters) [14484 14492])
                            ("args" variable nil (reparse-symbol function_parameters) [14500 14506]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [14413 14842])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14865 14869]))                          )
                        (reparse-symbol indented_block_body) [14847 15004])
                    ("digits_change" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15027 15031])
                            ("cr" variable nil (reparse-symbol function_parameters) [15033 15035]))                          )
                        (reparse-symbol indented_block_body) [15009 15051]))                  
                :type "class")
                nil [14027 15051])
            ("date" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [15077 15091])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [15096 15110])
                    ("MONTHS" variable nil (reparse-symbol indented_block_body) [15116 15445])
                    ("today" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("args" variable nil (reparse-symbol function_parameters) [15479 15484]))                          
                        :documentation " Returns the current date in a format fit for being a
        default value to a ``date`` field.

        This method should be provided as is to the _defaults dict, it
        should not be called.
        ")
                        (reparse-symbol indented_block_body) [15451 15796])
                    ("context_today" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("model" variable nil (reparse-symbol function_parameters) [15837 15842])
                            ("cr" variable nil (reparse-symbol function_parameters) [15844 15846])
                            ("uid" variable nil (reparse-symbol function_parameters) [15848 15851])
                            ("context" variable nil (reparse-symbol function_parameters) [15853 15860])
                            ("timestamp" variable nil (reparse-symbol function_parameters) [15867 15876]))                          
                        :documentation "Returns the current date as seen in the client's timezone
           in a format fit for date fields.
           This method may be passed as value to initialize _defaults.

           :param Model model: model (osv) for which the date value is being
                               computed - automatically passed when used in
                                _defaults.
           :param datetime timestamp: optional datetime value to use instead of
                                      the current date and time (must be a
                                      datetime, regular dates can't be converted
                                      between timezones.)
           :param dict context: the 'tz' key in the context should give the
                                name of the User/Client timezone (otherwise
                                UTC is used)
           :rtype: str 
        ")
                        (reparse-symbol indented_block_body) [15801 17649])
                    ("date_to_datetime" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("model" variable nil (reparse-symbol function_parameters) [17693 17698])
                            ("cr" variable nil (reparse-symbol function_parameters) [17700 17702])
                            ("uid" variable nil (reparse-symbol function_parameters) [17704 17707])
                            ("userdate" variable nil (reparse-symbol function_parameters) [17709 17717])
                            ("context" variable nil (reparse-symbol function_parameters) [17719 17726]))                          
                        :documentation " Convert date values expressed in user's timezone to
        server-side UTC timestamp, assuming a default arbitrary
        time of 12:00 AM - because a time is needed.

        :param str userdate: date string in in user time zone
        :return: UTC datetime string for server-side use
        ")
                        (reparse-symbol indented_block_body) [17654 18779]))                  
                :type "class")
                nil [15052 18779])
            ("datetime" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [18810 18828])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [18833 18847])
                    ("MONTHS" variable nil (reparse-symbol indented_block_body) [18853 19182])
                    ("now" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("args" variable nil (reparse-symbol function_parameters) [19214 19219]))                          
                        :documentation " Returns the current datetime in a format fit for being a
        default value to a ``datetime`` field.

        This method should be provided as is to the _defaults dict, it
        should not be called.
        ")
                        (reparse-symbol indented_block_body) [19188 19545])
                    ("context_timestamp" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cr" variable nil (reparse-symbol function_parameters) [19590 19592])
                            ("uid" variable nil (reparse-symbol function_parameters) [19594 19597])
                            ("timestamp" variable nil (reparse-symbol function_parameters) [19599 19608])
                            ("context" variable nil (reparse-symbol function_parameters) [19610 19617]))                          
                        :documentation "Returns the given timestamp converted to the client's timezone.
           This method is *not* meant for use as a _defaults initializer,
           because datetime fields are automatically converted upon
           display on client side. For _defaults you :meth:`fields.datetime.now`
           should be used instead.

           :param datetime timestamp: naive datetime value (expressed in UTC)
                                      to be converted to the client timezone
           :param dict context: the 'tz' key in the context should give the
                                name of the User/Client timezone (otherwise
                                UTC is used)
           :rtype: datetime
           :return: timestamp converted to timezone-aware datetime in context
                    timezone
        ")
                        (reparse-symbol indented_block_body) [19550 21286])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [21329 21332])
                            ("field" variable nil (reparse-symbol function_parameters) [21334 21339])
                            ("cr" variable nil (reparse-symbol function_parameters) [21341 21343])
                            ("uid" variable nil (reparse-symbol function_parameters) [21345 21348])
                            ("obj" variable nil (reparse-symbol function_parameters) [21350 21353])
                            ("value" variable nil (reparse-symbol function_parameters) [21355 21360])
                            ("context" variable nil (reparse-symbol function_parameters) [21362 21369]))                          )
                        (reparse-symbol indented_block_body) [21291 21593]))                  
                :type "class")
                nil [18781 21593])
            ("binary" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [21621 21637])
                    ("_classic_read" variable nil (reparse-symbol indented_block_body) [21642 21663])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [22096 22112])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [22117 22176])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [22181 22217])
                    ("_symbol_get" variable nil (reparse-symbol indented_block_body) [22222 22264])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [22270 22293])
                    ("__init__" function
                       (:suite 
                          ( ("args" variable nil (reparse-symbol indented_block_body) [22355 22403])
                            ("_column" code nil (reparse-symbol indented_block_body) [22412 22474]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22312 22316])
                            ("string" variable nil (reparse-symbol function_parameters) [22318 22324])
                            ("filters" variable nil (reparse-symbol function_parameters) [22336 22343])
                            ("args" variable nil (reparse-symbol function_parameters) [22350 22356]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [22299 22487])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22500 22504])
                            ("cr" variable nil (reparse-symbol function_parameters) [22506 22508])
                            ("obj" variable nil (reparse-symbol function_parameters) [22510 22513])
                            ("ids" variable nil (reparse-symbol function_parameters) [22515 22518])
                            ("name" variable nil (reparse-symbol function_parameters) [22520 22524])
                            ("user" variable nil (reparse-symbol function_parameters) [22526 22530])
                            ("context" variable nil (reparse-symbol function_parameters) [22537 22544])
                            ("values" variable nil (reparse-symbol function_parameters) [22551 22557]))                          )
                        (reparse-symbol indented_block_body) [22492 23442]))                  
                :type "class")
                nil [21594 23442])
            ("selection" type
               (:superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [23473 23492])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [23497 23522])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [23581 23709])
                            ("_column" code nil (reparse-symbol indented_block_body) [23717 23783]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23541 23545])
                            ("selection" variable nil (reparse-symbol function_parameters) [23547 23556])
                            ("string" variable nil (reparse-symbol function_parameters) [23558 23564])
                            ("args" variable nil (reparse-symbol function_parameters) [23576 23582]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [23528 23796])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23819 23823]))                          )
                        (reparse-symbol indented_block_body) [23801 23943])
                    ("reify" function
                       (:documentation " Munges the field's ``selection`` attribute as necessary to get
        something useable out of it: calls it if it's a function, applies
        translations to labels if it's not.

        A callable ``selection`` is considered translated on its own.

        :param orm.Model model:
        :param _column field:
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [23975 23978])
                            ("cr" variable nil (reparse-symbol function_parameters) [23980 23982])
                            ("uid" variable nil (reparse-symbol function_parameters) [23984 23987])
                            ("model" variable nil (reparse-symbol function_parameters) [23989 23994])
                            ("field" variable nil (reparse-symbol function_parameters) [23996 24001])
                            ("context" variable nil (reparse-symbol function_parameters) [24003 24010]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [23948 25160]))                  
                :type "class")
                nil [23443 25160])
            ("many2one" type
               (:superclasses ("_column")
                :members 
                  ( ("_classic_read" variable nil (reparse-symbol indented_block_body) [25652 25673])
                    ("_classic_write" variable nil (reparse-symbol indented_block_body) [25678 25699])
                    ("_type" variable nil (reparse-symbol indented_block_body) [25704 25722])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [25727 25743])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [25748 25779])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [25784 25820])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [25826 25860])
                    ("__init__" function
                       (:suite 
                          ( ("args" variable nil (reparse-symbol indented_block_body) [25930 25981])
                            ("_column" code nil (reparse-symbol indented_block_body) [25990 26035])
                            ("self" variable nil (reparse-symbol indented_block_body) [26044 26059])
                            ("self" variable nil (reparse-symbol indented_block_body) [26068 26095]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25879 25883])
                            ("obj" variable nil (reparse-symbol function_parameters) [25885 25888])
                            ("string" variable nil (reparse-symbol function_parameters) [25890 25896])
                            ("auto_join" variable nil (reparse-symbol function_parameters) [25908 25917])
                            ("args" variable nil (reparse-symbol function_parameters) [25925 25931]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [25866 26108])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26131 26135]))                          )
                        (reparse-symbol indented_block_body) [26113 26296])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26309 26313])
                            ("cr" variable nil (reparse-symbol function_parameters) [26315 26317])
                            ("obj_src" variable nil (reparse-symbol function_parameters) [26319 26326])
                            ("id" variable nil (reparse-symbol function_parameters) [26328 26330])
                            ("field" variable nil (reparse-symbol function_parameters) [26332 26337])
                            ("values" variable nil (reparse-symbol function_parameters) [26339 26345])
                            ("user" variable nil (reparse-symbol function_parameters) [26347 26351])
                            ("context" variable nil (reparse-symbol function_parameters) [26358 26365]))                          )
                        (reparse-symbol indented_block_body) [26301 27502])
                    ("search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27518 27522])
                            ("cr" variable nil (reparse-symbol function_parameters) [27524 27526])
                            ("obj" variable nil (reparse-symbol function_parameters) [27528 27531])
                            ("args" variable nil (reparse-symbol function_parameters) [27533 27537])
                            ("name" variable nil (reparse-symbol function_parameters) [27539 27543])
                            ("value" variable nil (reparse-symbol function_parameters) [27545 27550])
                            ("offset" variable nil (reparse-symbol function_parameters) [27552 27558])
                            ("limit" variable nil (reparse-symbol function_parameters) [27562 27567])
                            ("uid" variable nil (reparse-symbol function_parameters) [27574 27577])
                            ("context" variable nil (reparse-symbol function_parameters) [27584 27591]))                          )
                        (reparse-symbol indented_block_body) [27507 27727])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [27770 27773])
                            ("field" variable nil (reparse-symbol function_parameters) [27775 27780])
                            ("cr" variable nil (reparse-symbol function_parameters) [27782 27784])
                            ("uid" variable nil (reparse-symbol function_parameters) [27786 27789])
                            ("obj" variable nil (reparse-symbol function_parameters) [27791 27794])
                            ("value" variable nil (reparse-symbol function_parameters) [27796 27801])
                            ("context" variable nil (reparse-symbol function_parameters) [27803 27810]))                          )
                        (reparse-symbol indented_block_body) [27732 27894]))                  
                :type "class")
                nil [25623 27894])
            ("one2many" type
               (:superclasses ("_column")
                :members 
                  ( ("_classic_read" variable nil (reparse-symbol indented_block_body) [27925 27946])
                    ("_classic_write" variable nil (reparse-symbol indented_block_body) [27951 27973])
                    ("_type" variable nil (reparse-symbol indented_block_body) [27978 27996])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [28002 28060])
                    ("__init__" function
                       (:suite 
                          ( ("args" variable nil (reparse-symbol indented_block_body) [28206 28244])
                            ("args" variable nil (reparse-symbol indented_block_body) [28253 28301])
                            ("_column" code nil (reparse-symbol indented_block_body) [28310 28355])
                            ("self" variable nil (reparse-symbol indented_block_body) [28364 28379])
                            ("self" variable nil (reparse-symbol indented_block_body) [28388 28415])
                            ("self" variable nil (reparse-symbol indented_block_body) [28424 28443])
                            ("self" variable nil (reparse-symbol indented_block_body) [28452 28479])
                            ("assert" code nil (reparse-symbol indented_block_body) [28546 28581]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28079 28083])
                            ("obj" variable nil (reparse-symbol function_parameters) [28085 28088])
                            ("fields_id" variable nil (reparse-symbol function_parameters) [28090 28099])
                            ("string" variable nil (reparse-symbol function_parameters) [28101 28107])
                            ("limit" variable nil (reparse-symbol function_parameters) [28119 28124])
                            ("auto_join" variable nil (reparse-symbol function_parameters) [28131 28140])
                            ("args" variable nil (reparse-symbol function_parameters) [28148 28154]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [28066 28594])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28617 28621]))                          )
                        (reparse-symbol indented_block_body) [28599 28865])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28878 28882])
                            ("cr" variable nil (reparse-symbol function_parameters) [28884 28886])
                            ("obj" variable nil (reparse-symbol function_parameters) [28888 28891])
                            ("ids" variable nil (reparse-symbol function_parameters) [28893 28896])
                            ("name" variable nil (reparse-symbol function_parameters) [28898 28902])
                            ("user" variable nil (reparse-symbol function_parameters) [28904 28908])
                            ("offset" variable nil (reparse-symbol function_parameters) [28915 28921])
                            ("context" variable nil (reparse-symbol function_parameters) [28925 28932])
                            ("values" variable nil (reparse-symbol function_parameters) [28939 28945]))                          )
                        (reparse-symbol indented_block_body) [28870 29729])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29742 29746])
                            ("cr" variable nil (reparse-symbol function_parameters) [29748 29750])
                            ("obj" variable nil (reparse-symbol function_parameters) [29752 29755])
                            ("id" variable nil (reparse-symbol function_parameters) [29757 29759])
                            ("field" variable nil (reparse-symbol function_parameters) [29761 29766])
                            ("values" variable nil (reparse-symbol function_parameters) [29768 29774])
                            ("user" variable nil (reparse-symbol function_parameters) [29776 29780])
                            ("context" variable nil (reparse-symbol function_parameters) [29787 29794]))                          )
                        (reparse-symbol indented_block_body) [29734 33768])
                    ("search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33784 33788])
                            ("cr" variable nil (reparse-symbol function_parameters) [33790 33792])
                            ("obj" variable nil (reparse-symbol function_parameters) [33794 33797])
                            ("args" variable nil (reparse-symbol function_parameters) [33799 33803])
                            ("name" variable nil (reparse-symbol function_parameters) [33805 33809])
                            ("value" variable nil (reparse-symbol function_parameters) [33811 33816])
                            ("offset" variable nil (reparse-symbol function_parameters) [33818 33824])
                            ("limit" variable nil (reparse-symbol function_parameters) [33828 33833])
                            ("uid" variable nil (reparse-symbol function_parameters) [33840 33843])
                            ("operator" variable nil (reparse-symbol function_parameters) [33850 33858])
                            ("context" variable nil (reparse-symbol function_parameters) [33867 33874]))                          )
                        (reparse-symbol indented_block_body) [33773 34071])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [34114 34117])
                            ("field" variable nil (reparse-symbol function_parameters) [34119 34124])
                            ("cr" variable nil (reparse-symbol function_parameters) [34126 34128])
                            ("uid" variable nil (reparse-symbol function_parameters) [34130 34133])
                            ("obj" variable nil (reparse-symbol function_parameters) [34135 34138])
                            ("value" variable nil (reparse-symbol function_parameters) [34140 34145])
                            ("context" variable nil (reparse-symbol function_parameters) [34147 34154]))                          )
                        (reparse-symbol indented_block_body) [34076 34263]))                  
                :type "class")
                nil [27896 34263])
            ("many2many" type
               (:documentation "Encapsulates the logic of a many-to-many bidirectional relationship, handling the
       low-level details of the intermediary relationship table transparently.
       A many-to-many relationship is always symmetrical, and can be declared and accessed
       from either endpoint model.
       If ``rel`` (relationship table name), ``id1`` (source foreign key column name)
       or id2 (destination foreign key column name) are not specified, the system will
       provide default values. This will by default only allow one single symmetrical
       many-to-many relationship between the source and destination model.
       For multiple many-to-many relationship between the same models and for
       relationships where source and destination models are the same, ``rel``, ``id1``
       and ``id2`` should be specified explicitly.

       :param str obj: destination model
       :param str rel: optional name of the intermediary relationship table. If not specified,
                       a canonical name will be derived based on the alphabetically-ordered
                       model names of the source and destination (in the form: ``amodel_bmodel_rel``).
                       Automatic naming is not possible when the source and destination are
                       the same, for obvious ambiguity reasons.
       :param str id1: optional name for the column holding the foreign key to the current
                       model in the relationship table. If not specified, a canonical name
                       will be derived based on the model name (in the form: `src_model_id`).
       :param str id2: optional name for the column holding the foreign key to the destination
                       model in the relationship table. If not specified, a canonical name
                       will be derived based on the model name (in the form: `dest_model_id`)
       :param str string: field label
    "
                :superclasses ("_column")
                :members 
                  ( ("_classic_read" variable nil (reparse-symbol indented_block_body) [36728 36749])
                    ("_classic_write" variable nil (reparse-symbol indented_block_body) [36754 36776])
                    ("_type" variable nil (reparse-symbol indented_block_body) [36781 36800])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [36806 36874])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        \"\"\"" code nil (reparse-symbol indented_block_body) [36404 36419])
                            ("args" variable nil (reparse-symbol indented_block_body) [36428 36476])
                            ("_column" code nil (reparse-symbol indented_block_body) [36485 36530])
                            ("self" variable nil (reparse-symbol indented_block_body) [36539 36554])
                            ("if" code nil (reparse-symbol indented_block_body) [36563 36771])
                            ("self" variable nil (reparse-symbol indented_block_body) [36779 36794])
                            ("self" variable nil (reparse-symbol indented_block_body) [36803 36818])
                            ("self" variable nil (reparse-symbol indented_block_body) [36827 36842])
                            ("self" variable nil (reparse-symbol indented_block_body) [36851 36870])
                            ("self" variable nil (reparse-symbol indented_block_body) [36879 36902]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36893 36897])
                            ("obj" variable nil (reparse-symbol function_parameters) [36899 36902])
                            ("rel" variable nil (reparse-symbol function_parameters) [36904 36907])
                            ("id1" variable nil (reparse-symbol function_parameters) [36914 36917])
                            ("id2" variable nil (reparse-symbol function_parameters) [36924 36927])
                            ("string" variable nil (reparse-symbol function_parameters) [36934 36940])
                            ("limit" variable nil (reparse-symbol function_parameters) [36952 36957])
                            ("args" variable nil (reparse-symbol function_parameters) [36964 36970]))                          
                        :documentation "
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [36880 37480])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37503 37507]))                          )
                        (reparse-symbol indented_block_body) [37485 37770])
                    ("_sql_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37790 37794])
                            ("source_model" variable nil (reparse-symbol function_parameters) [37796 37808]))                          
                        :documentation "Return the SQL names defining the structure of the m2m relationship table

            :return: (m2m_table, local_col, dest_col) where m2m_table is the table name,
                     local_col is the name of the column holding the current model's FK, and
                     dest_col is the name of the column holding the destination model's FK, and
        ")
                        (reparse-symbol indented_block_body) [37775 39023])
                    ("_get_query_and_where_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39060 39064])
                            ("cr" variable nil (reparse-symbol function_parameters) [39066 39068])
                            ("model" variable nil (reparse-symbol function_parameters) [39070 39075])
                            ("ids" variable nil (reparse-symbol function_parameters) [39077 39080])
                            ("values" variable nil (reparse-symbol function_parameters) [39082 39088])
                            ("where_params" variable nil (reparse-symbol function_parameters) [39090 39102]))                          
                        :documentation " Extracted from ``get`` to facilitate fine-tuning of the generated
            query. ")
                        (reparse-symbol indented_block_body) [39028 39607])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39620 39624])
                            ("cr" variable nil (reparse-symbol function_parameters) [39626 39628])
                            ("model" variable nil (reparse-symbol function_parameters) [39630 39635])
                            ("ids" variable nil (reparse-symbol function_parameters) [39637 39640])
                            ("name" variable nil (reparse-symbol function_parameters) [39642 39646])
                            ("user" variable nil (reparse-symbol function_parameters) [39648 39652])
                            ("offset" variable nil (reparse-symbol function_parameters) [39659 39665])
                            ("context" variable nil (reparse-symbol function_parameters) [39669 39676])
                            ("values" variable nil (reparse-symbol function_parameters) [39683 39689]))                          )
                        (reparse-symbol indented_block_body) [39612 41432])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41445 41449])
                            ("cr" variable nil (reparse-symbol function_parameters) [41451 41453])
                            ("model" variable nil (reparse-symbol function_parameters) [41455 41460])
                            ("id" variable nil (reparse-symbol function_parameters) [41462 41464])
                            ("name" variable nil (reparse-symbol function_parameters) [41466 41470])
                            ("values" variable nil (reparse-symbol function_parameters) [41472 41478])
                            ("user" variable nil (reparse-symbol function_parameters) [41480 41484])
                            ("context" variable nil (reparse-symbol function_parameters) [41491 41498]))                          )
                        (reparse-symbol indented_block_body) [41437 43550])
                    ("search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43608 43612])
                            ("cr" variable nil (reparse-symbol function_parameters) [43614 43616])
                            ("obj" variable nil (reparse-symbol function_parameters) [43618 43621])
                            ("args" variable nil (reparse-symbol function_parameters) [43623 43627])
                            ("name" variable nil (reparse-symbol function_parameters) [43629 43633])
                            ("value" variable nil (reparse-symbol function_parameters) [43635 43640])
                            ("offset" variable nil (reparse-symbol function_parameters) [43642 43648])
                            ("limit" variable nil (reparse-symbol function_parameters) [43652 43657])
                            ("uid" variable nil (reparse-symbol function_parameters) [43664 43667])
                            ("operator" variable nil (reparse-symbol function_parameters) [43674 43682])
                            ("context" variable nil (reparse-symbol function_parameters) [43691 43698]))                          )
                        (reparse-symbol indented_block_body) [43597 43836])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [43879 43882])
                            ("field" variable nil (reparse-symbol function_parameters) [43884 43889])
                            ("cr" variable nil (reparse-symbol function_parameters) [43891 43893])
                            ("uid" variable nil (reparse-symbol function_parameters) [43895 43898])
                            ("obj" variable nil (reparse-symbol function_parameters) [43900 43903])
                            ("value" variable nil (reparse-symbol function_parameters) [43905 43910])
                            ("context" variable nil (reparse-symbol function_parameters) [43912 43919]))                          )
                        (reparse-symbol indented_block_body) [43841 44029]))                  
                :type "class")
                nil [34763 44029])
            ("get_nice_size" function (:arguments 
              ( ("value" variable nil (reparse-symbol function_parameters) [44049 44054]))              ) nil [44031 44308])
            ("invalid_xml_low_bytes" variable nil nil [44406 44474])
            ("sanitize_binary_value" function (:arguments 
              ( ("value" variable nil (reparse-symbol function_parameters) [44502 44507]))              ) nil [44476 45906])
            ("function" type
               (:documentation "
    A field whose value is computed by a function (rather
    than being read from the database).

    :param fnct: the callable that will compute the field value.
    :param arg: arbitrary value to be passed to ``fnct`` when computing the value.
    :param fnct_inv: the callable that will allow writing values in that field
                     (if not provided, the field is read-only).
    :param fnct_inv_arg: arbitrary value to be passed to ``fnct_inv`` when
                         writing a value.
    :param str type: type of the field simulated by the function field
    :param fnct_search: the callable that allows searching on the field
                        (if not provided, search will not return any result).
    :param store: store computed value in database
                  (see :ref:`The *store* parameter <field-function-store>`).
    :type store: True or dict specifying triggers for field computation
    :param multi: name of batch for batch computation of function fields.
                  All fields with the same batch name will be computed by
                  a single function call. This changes the signature of the
                  ``fnct`` callable.

    .. _field-function-fnct: The ``fnct`` parameter

    .. rubric:: The ``fnct`` parameter

    The callable implementing the function field must have the following signature:

    .. function:: fnct(model, cr, uid, ids, field_name(s), arg, context)

        Implements the function field.

        :param orm model: model to which the field belongs (should be ``self`` for
                          a model method)
        :param field_name(s): name of the field to compute, or if ``multi`` is provided,
                              list of field names to compute.
        :type field_name(s): str | [str]
        :param arg: arbitrary value passed when declaring the function field
        :rtype: dict
        :return: mapping of ``ids`` to computed values, or if multi is provided,
                 to a map of field_names to computed values

    The values in the returned dictionary must be of the type specified by the type
    argument in the field declaration.

    Here is an example with a simple function ``char`` function field::

        # declarations
        def compute(self, cr, uid, ids, field_name, arg, context):
            result = {}
            # ...
            return result
        _columns['my_char'] = fields.function(compute, type='char', size=50)

        # when called with ``ids=[1,2,3]``, ``compute`` could return:
        {
            1: 'foo',
            2: 'bar',
            3: False # null values should be returned explicitly too
        }

    If ``multi`` is set, then ``field_name`` is replaced by ``field_names``: a list
    of the field names that should be computed. Each value in the returned
    dictionary must then be a dictionary mapping field names to values.

    Here is an example where two function fields (``name`` and ``age``)
    are both computed by a single function field::

        # declarations
        def compute(self, cr, uid, ids, field_names, arg, context):
            result = {}
            # ...
            return result
        _columns['name'] = fields.function(compute_person_data, type='char',\\
                                           size=50, multi='person_data')
        _columns[''age'] = fields.function(compute_person_data, type='integer',\\
                                           multi='person_data')

        # when called with ``ids=[1,2,3]``, ``compute_person_data`` could return:
        {
            1: {'name': 'Bob', 'age': 23},
            2: {'name': 'Sally', 'age': 19},
            3: {'name': 'unknown', 'age': False}
        }

    .. _field-function-fnct-inv:

    .. rubric:: The ``fnct_inv`` parameter

    This callable implements the write operation for the function field
    and must have the following signature:

    .. function:: fnct_inv(model, cr, uid, id, field_name, field_value, fnct_inv_arg, context)

        Callable that implements the ``write`` operation for the function field.

        :param orm model: model to which the field belongs (should be ``self`` for
                          a model method)
        :param int id: the identifier of the object to write on
        :param str field_name: name of the field to set
        :param fnct_inv_arg: arbitrary value passed when declaring the function field
        :return: True

    When writing values for a function field, the ``multi`` parameter is ignored.

    .. _field-function-fnct-search:

    .. rubric:: The ``fnct_search`` parameter

    This callable implements the search operation for the function field
    and must have the following signature:

    .. function:: fnct_search(model, cr, uid, model_again, field_name, criterion, context)

        Callable that implements the ``search`` operation for the function field by expanding
        a search criterion based on the function field into a new domain based only on
        columns that are stored in the database.

        :param orm model: model to which the field belongs (should be ``self`` for
                          a model method)
        :param orm model_again: same value as ``model`` (seriously! this is for backwards
                                compatibility)
        :param str field_name: name of the field to search on
        :param list criterion: domain component specifying the search criterion on the field.
        :rtype: list
        :return: domain to use instead of ``criterion`` when performing the search.
                 This new domain must be based only on columns stored in the database, as it
                 will be used directly without any translation.

        The returned value must be a domain, that is, a list of the form [(field_name, operator, operand)].
        The most generic way to implement ``fnct_search`` is to directly search for the records that
        match the given ``criterion``, and return their ``ids`` wrapped in a domain, such as
        ``[('id','in',[1,3,5])]``.

    .. _field-function-store:

    .. rubric:: The ``store`` parameter

    The ``store`` parameter allows caching the result of the field computation in the
    database, and defining the triggers that will invalidate that cache and force a
    recomputation of the function field.
    When not provided, the field is computed every time its value is read.
    The value of ``store`` may be either ``True`` (to recompute the field value whenever
    any field in the same record is modified), or a dictionary specifying a more
    flexible set of recomputation triggers.

    A trigger specification is a dictionary that maps the names of the models that
    will trigger the computation, to a tuple describing the trigger rule, in the
    following form::

        store = {
            'trigger_model': (mapping_function,
                              ['trigger_field1', 'trigger_field2'],
                              priority),
        }

    A trigger rule is defined by a 3-item tuple where:

        * The ``mapping_function`` is defined as follows:

            .. function:: mapping_function(trigger_model, cr, uid, trigger_ids, context)

                Callable that maps record ids of a trigger model to ids of the
                corresponding records in the source model (whose field values
                need to be recomputed).

                :param orm model: trigger_model
                :param list trigger_ids: ids of the records of trigger_model that were
                                         modified
                :rtype: list
                :return: list of ids of the source model whose function field values
                         need to be recomputed

        * The second item is a list of the fields who should act as triggers for
          the computation. If an empty list is given, all fields will act as triggers.
        * The last item is the priority, used to order the triggers when processing them
          after any write operation on a model that has function field triggers. The
          default priority is 10.

    In fact, setting store = True is the same as using the following trigger dict::

        store = {
              'model_itself': (lambda self, cr, uid, ids, context: ids,
                               [],
                               10)
        }

    "
                :superclasses ("_column")
                :members 
                  ( ("_properties" variable nil (reparse-symbol indented_block_body) [54499 54517])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [54523 54921])
                    ("digits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54952 54956]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [54927 55123])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [54753 54779])
                            ("self" variable nil (reparse-symbol indented_block_body) [54788 54815])
                            ("self" variable nil (reparse-symbol indented_block_body) [54824 54846])
                            ("self" variable nil (reparse-symbol indented_block_body) [54855 54876])
                            ("self" variable nil (reparse-symbol indented_block_body) [54885 54913])
                            ("self" variable nil (reparse-symbol indented_block_body) [54922 54973])
                            ("self" variable nil (reparse-symbol indented_block_body) [54982 55005])
                            ("self" variable nil (reparse-symbol indented_block_body) [55076 55117])
                            ("self" variable nil (reparse-symbol indented_block_body) [55126 55181])
                            ("self" variable nil (reparse-symbol indented_block_body) [55190 55227])
                            ("args" variable nil (reparse-symbol indented_block_body) [55289 55327])
                            ("_column" code nil (reparse-symbol indented_block_body) [55337 55367])
                            ("self" variable nil (reparse-symbol indented_block_body) [55377 55394])
                            ("self" variable nil (reparse-symbol indented_block_body) [55403 55420])
                            ("self" variable nil (reparse-symbol indented_block_body) [55429 55444])
                            ("self" variable nil (reparse-symbol indented_block_body) [55453 55478])
                            ("self" variable nil (reparse-symbol indented_block_body) [55487 55520])
                            ("self" variable nil (reparse-symbol indented_block_body) [55529 55560])
                            ("self" variable nil (reparse-symbol indented_block_body) [55569 55587])
                            ("self" variable nil (reparse-symbol indented_block_body) [55596 55615])
                            ("if" code nil (reparse-symbol indented_block_body) [55625 55672])
                            ("if" code nil (reparse-symbol indented_block_body) [55681 55751])
                            ("if" code nil (reparse-symbol indented_block_body) [55760 55913])
                            ("if" code nil (reparse-symbol indented_block_body) [55922 56284])
                            ("if" code nil (reparse-symbol indented_block_body) [56293 56954]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55189 55193])
                            ("fnct" variable nil (reparse-symbol function_parameters) [55195 55199])
                            ("arg" variable nil (reparse-symbol function_parameters) [55201 55204])
                            ("fnct_inv" variable nil (reparse-symbol function_parameters) [55211 55219])
                            ("fnct_inv_arg" variable nil (reparse-symbol function_parameters) [55226 55238])
                            ("type" variable nil (reparse-symbol function_parameters) [55245 55249])
                            ("fnct_search" variable nil (reparse-symbol function_parameters) [55259 55270])
                            ("obj" variable nil (reparse-symbol function_parameters) [55277 55280])
                            ("store" variable nil (reparse-symbol function_parameters) [55287 55292])
                            ("multi" variable nil (reparse-symbol function_parameters) [55300 55305])
                            ("args" variable nil (reparse-symbol function_parameters) [55313 55319]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [55176 57531])
                    ("new" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57544 57548])
                            ("_computed_field" variable nil (reparse-symbol function_parameters) [57550 57565])
                            ("args" variable nil (reparse-symbol function_parameters) [57573 57579]))                          )
                        (reparse-symbol indented_block_body) [57536 57927])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57950 57954]))                          )
                        (reparse-symbol indented_block_body) [57932 58429])
                    ("digits_change" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58452 58456])
                            ("cr" variable nil (reparse-symbol function_parameters) [58458 58460]))                          )
                        (reparse-symbol indented_block_body) [58434 58476])
                    ("search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58492 58496])
                            ("cr" variable nil (reparse-symbol function_parameters) [58498 58500])
                            ("uid" variable nil (reparse-symbol function_parameters) [58502 58505])
                            ("obj" variable nil (reparse-symbol function_parameters) [58507 58510])
                            ("name" variable nil (reparse-symbol function_parameters) [58512 58516])
                            ("args" variable nil (reparse-symbol function_parameters) [58518 58522])
                            ("context" variable nil (reparse-symbol function_parameters) [58524 58531]))                          )
                        (reparse-symbol indented_block_body) [58481 58724])
                    ("postprocess" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58745 58749])
                            ("cr" variable nil (reparse-symbol function_parameters) [58751 58753])
                            ("uid" variable nil (reparse-symbol function_parameters) [58755 58758])
                            ("obj" variable nil (reparse-symbol function_parameters) [58760 58763])
                            ("field" variable nil (reparse-symbol function_parameters) [58765 58770])
                            ("value" variable nil (reparse-symbol function_parameters) [58772 58777])
                            ("context" variable nil (reparse-symbol function_parameters) [58784 58791]))                          )
                        (reparse-symbol indented_block_body) [58729 58891])
                    ("_postprocess_batch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58919 58923])
                            ("cr" variable nil (reparse-symbol function_parameters) [58925 58927])
                            ("uid" variable nil (reparse-symbol function_parameters) [58929 58932])
                            ("obj" variable nil (reparse-symbol function_parameters) [58934 58937])
                            ("field" variable nil (reparse-symbol function_parameters) [58939 58944])
                            ("values" variable nil (reparse-symbol function_parameters) [58946 58952])
                            ("context" variable nil (reparse-symbol function_parameters) [58954 58961]))                          )
                        (reparse-symbol indented_block_body) [58896 59669])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59682 59686])
                            ("cr" variable nil (reparse-symbol function_parameters) [59688 59690])
                            ("obj" variable nil (reparse-symbol function_parameters) [59692 59695])
                            ("ids" variable nil (reparse-symbol function_parameters) [59697 59700])
                            ("name" variable nil (reparse-symbol function_parameters) [59702 59706])
                            ("uid" variable nil (reparse-symbol function_parameters) [59708 59711])
                            ("context" variable nil (reparse-symbol function_parameters) [59719 59726])
                            ("values" variable nil (reparse-symbol function_parameters) [59733 59739]))                          )
                        (reparse-symbol indented_block_body) [59674 60880])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60893 60897])
                            ("cr" variable nil (reparse-symbol function_parameters) [60899 60901])
                            ("obj" variable nil (reparse-symbol function_parameters) [60903 60906])
                            ("id" variable nil (reparse-symbol function_parameters) [60908 60910])
                            ("name" variable nil (reparse-symbol function_parameters) [60912 60916])
                            ("value" variable nil (reparse-symbol function_parameters) [60918 60923])
                            ("user" variable nil (reparse-symbol function_parameters) [60925 60929])
                            ("context" variable nil (reparse-symbol function_parameters) [60936 60943]))                          )
                        (reparse-symbol indented_block_body) [60885 61115])
                    ("_as_display_name" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [61158 61161])
                            ("field" variable nil (reparse-symbol function_parameters) [61163 61168])
                            ("cr" variable nil (reparse-symbol function_parameters) [61170 61172])
                            ("uid" variable nil (reparse-symbol function_parameters) [61174 61177])
                            ("obj" variable nil (reparse-symbol function_parameters) [61179 61182])
                            ("value" variable nil (reparse-symbol function_parameters) [61184 61189])
                            ("context" variable nil (reparse-symbol function_parameters) [61191 61198]))                          )
                        (reparse-symbol indented_block_body) [61120 61451]))                  
                :type "class")
                nil [46046 61451])
            ("related" type
               (:documentation "Field that points to some data inside another field of the current record.

    Example::

       _columns = {
           'foo_id': fields.many2one('my.foo', 'Foo'),
           'bar': fields.related('foo_id', 'frol', type='char', string='Frol of Foo'),
        }
    "
                :superclasses ("function")
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [61897 61930])
                    ("_related_search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61956 61960])
                            ("tobj" variable nil (reparse-symbol function_parameters) [61962 61966])
                            ("cr" variable nil (reparse-symbol function_parameters) [61968 61970])
                            ("uid" variable nil (reparse-symbol function_parameters) [61972 61975])
                            ("obj" variable nil (reparse-symbol function_parameters) [61977 61980])
                            ("name" variable nil (reparse-symbol function_parameters) [61987 61991])
                            ("domain" variable nil (reparse-symbol function_parameters) [61998 62004])
                            ("context" variable nil (reparse-symbol function_parameters) [62011 62018]))                          )
                        (reparse-symbol indented_block_body) [61936 62249])
                    ("_related_write" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [62273 62277])
                            ("obj" variable nil (reparse-symbol function_parameters) [62279 62282])
                            ("cr" variable nil (reparse-symbol function_parameters) [62284 62286])
                            ("uid" variable nil (reparse-symbol function_parameters) [62288 62291])
                            ("ids" variable nil (reparse-symbol function_parameters) [62293 62296])
                            ("field_name" variable nil (reparse-symbol function_parameters) [62298 62308])
                            ("values" variable nil (reparse-symbol function_parameters) [62310 62316])
                            ("args" variable nil (reparse-symbol function_parameters) [62318 62322])
                            ("context" variable nil (reparse-symbol function_parameters) [62324 62331]))                          )
                        (reparse-symbol indented_block_body) [62254 62755])
                    ("_related_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [62778 62782])
                            ("obj" variable nil (reparse-symbol function_parameters) [62784 62787])
                            ("cr" variable nil (reparse-symbol function_parameters) [62789 62791])
                            ("uid" variable nil (reparse-symbol function_parameters) [62793 62796])
                            ("ids" variable nil (reparse-symbol function_parameters) [62798 62801])
                            ("field_name" variable nil (reparse-symbol function_parameters) [62803 62813])
                            ("args" variable nil (reparse-symbol function_parameters) [62815 62819])
                            ("context" variable nil (reparse-symbol function_parameters) [62821 62828]))                          )
                        (reparse-symbol indented_block_body) [62760 63997])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [63467 63481])
                            ("self" variable nil (reparse-symbol indented_block_body) [63490 63510])
                            ("super" code nil (reparse-symbol indented_block_body) [63519 63654])
                            ("if" code nil (reparse-symbol indented_block_body) [63663 63794]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64015 64019])
                            ("arg" variable nil (reparse-symbol function_parameters) [64021 64025])
                            ("args" variable nil (reparse-symbol function_parameters) [64027 64033]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [64002 64371]))                  
                :type "class")
                nil [61590 64371])
            ("sparse" type
               (:superclasses ("function")
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [64401 64436])
                    ("convert_value" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64460 64464])
                            ("obj" variable nil (reparse-symbol function_parameters) [64466 64469])
                            ("cr" variable nil (reparse-symbol function_parameters) [64471 64473])
                            ("uid" variable nil (reparse-symbol function_parameters) [64475 64478])
                            ("record" variable nil (reparse-symbol function_parameters) [64480 64486])
                            ("value" variable nil (reparse-symbol function_parameters) [64488 64493])
                            ("read_value" variable nil (reparse-symbol function_parameters) [64495 64505])
                            ("context" variable nil (reparse-symbol function_parameters) [64507 64514]))                          
                        :documentation "
            + For a many2many field, a list of tuples is expected.
              Here is the list of tuple that are accepted, with the corresponding semantics ::

                 (0, 0,  { values })    link to a new record that needs to be created with the given values dictionary
                 (1, ID, { values })    update the linked record with id = ID (write *values* on it)
                 (2, ID)                remove and delete the linked record with id = ID (calls unlink on ID, that will delete the object completely, and the link to it as well)
                 (3, ID)                cut the link to the linked record with id = ID (delete the relationship between the two objects but does not delete the target object itself)
                 (4, ID)                link to existing record with id = ID (adds a relationship)
                 (5)                    unlink all (like using (3,ID) for all linked records)
                 (6, 0, [IDs])          replace the list of linked IDs (like using (5) then (4,ID) for each ID in the list of IDs)

                 Example:
                    [(6, 0, [8, 5, 6, 4])] sets the many2many to ids [8, 5, 6, 4]

            + For a one2many field, a lits of tuples is expected.
              Here is the list of tuple that are accepted, with the corresponding semantics ::

                 (0, 0,  { values })    link to a new record that needs to be created with the given values dictionary
                 (1, ID, { values })    update the linked record with id = ID (write *values* on it)
                 (2, ID)                remove and delete the linked record with id = ID (calls unlink on ID, that will delete the object completely, and the link to it as well)

                 Example:
                    [(0, 0, {'field_name':field_value_record1, ...}), (0, 0, {'field_name':field_value_record2, ...})]
        ")
                        (reparse-symbol indented_block_body) [64442 67382])
                    ("_sparse_write" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [67405 67409])
                            ("obj" variable nil (reparse-symbol function_parameters) [67410 67413])
                            ("cr" variable nil (reparse-symbol function_parameters) [67414 67416])
                            ("uid" variable nil (reparse-symbol function_parameters) [67418 67421])
                            ("ids" variable nil (reparse-symbol function_parameters) [67423 67426])
                            ("field_name" variable nil (reparse-symbol function_parameters) [67428 67438])
                            ("value" variable nil (reparse-symbol function_parameters) [67440 67445])
                            ("args" variable nil (reparse-symbol function_parameters) [67447 67451])
                            ("context" variable nil (reparse-symbol function_parameters) [67453 67460]))                          )
                        (reparse-symbol indented_block_body) [67387 68151])
                    ("_sparse_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68173 68177])
                            ("obj" variable nil (reparse-symbol function_parameters) [68179 68182])
                            ("cr" variable nil (reparse-symbol function_parameters) [68184 68186])
                            ("uid" variable nil (reparse-symbol function_parameters) [68188 68191])
                            ("ids" variable nil (reparse-symbol function_parameters) [68193 68196])
                            ("field_names" variable nil (reparse-symbol function_parameters) [68198 68209])
                            ("args" variable nil (reparse-symbol function_parameters) [68211 68215])
                            ("context" variable nil (reparse-symbol function_parameters) [68217 68224]))                          )
                        (reparse-symbol indented_block_body) [68156 69453])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [68940 68986])
                            ("super" code nil (reparse-symbol indented_block_body) [68995 69105]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69471 69475])
                            ("serialization_field" variable nil (reparse-symbol function_parameters) [69477 69496])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [69498 69506]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [69458 69683]))                  
                :type "class")
                nil [64373 69683])
            ("dummy" type
               (:superclasses ("function")
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [69848 69881])
                    ("_dummy_search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [69905 69909])
                            ("tobj" variable nil (reparse-symbol function_parameters) [69911 69915])
                            ("cr" variable nil (reparse-symbol function_parameters) [69917 69919])
                            ("uid" variable nil (reparse-symbol function_parameters) [69921 69924])
                            ("obj" variable nil (reparse-symbol function_parameters) [69926 69929])
                            ("name" variable nil (reparse-symbol function_parameters) [69936 69940])
                            ("domain" variable nil (reparse-symbol function_parameters) [69947 69953])
                            ("context" variable nil (reparse-symbol function_parameters) [69960 69967]))                          )
                        (reparse-symbol indented_block_body) [69887 69993])
                    ("_dummy_write" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70015 70019])
                            ("obj" variable nil (reparse-symbol function_parameters) [70021 70024])
                            ("cr" variable nil (reparse-symbol function_parameters) [70026 70028])
                            ("uid" variable nil (reparse-symbol function_parameters) [70030 70033])
                            ("ids" variable nil (reparse-symbol function_parameters) [70035 70038])
                            ("field_name" variable nil (reparse-symbol function_parameters) [70040 70050])
                            ("values" variable nil (reparse-symbol function_parameters) [70052 70058])
                            ("args" variable nil (reparse-symbol function_parameters) [70060 70064])
                            ("context" variable nil (reparse-symbol function_parameters) [70066 70073]))                          )
                        (reparse-symbol indented_block_body) [69998 70102])
                    ("_dummy_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70123 70127])
                            ("obj" variable nil (reparse-symbol function_parameters) [70129 70132])
                            ("cr" variable nil (reparse-symbol function_parameters) [70134 70136])
                            ("uid" variable nil (reparse-symbol function_parameters) [70138 70141])
                            ("ids" variable nil (reparse-symbol function_parameters) [70143 70146])
                            ("field_name" variable nil (reparse-symbol function_parameters) [70148 70158])
                            ("args" variable nil (reparse-symbol function_parameters) [70160 70164])
                            ("context" variable nil (reparse-symbol function_parameters) [70166 70173]))                          )
                        (reparse-symbol indented_block_body) [70107 70199])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [69669 69683])
                            ("self" variable nil (reparse-symbol indented_block_body) [69692 69712])
                            ("super" code nil (reparse-symbol indented_block_body) [69721 69848]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70217 70221])
                            ("arg" variable nil (reparse-symbol function_parameters) [70223 70227])
                            ("args" variable nil (reparse-symbol function_parameters) [70229 70235]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [70204 70426]))                  
                :type "class")
                nil [69821 70426])
            ("serialized" type
               (:documentation " A field able to store an arbitrary python data structure.
    
        Note: only plain components allowed.
    "
                :superclasses ("_column")
                :members 
                  ( ("_type" variable nil (reparse-symbol indented_block_body) [70723 70743])
                    ("__slots__" variable nil (reparse-symbol indented_block_body) [70748 70762])
                    ("_symbol_set_struct" function (:arguments 
                      ( ("val" variable nil (reparse-symbol function_parameters) [70791 70794]))                      ) (reparse-symbol indented_block_body) [70768 70834])
                    ("_symbol_get_struct" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70862 70866])
                            ("val" variable nil (reparse-symbol function_parameters) [70868 70871]))                          )
                        (reparse-symbol indented_block_body) [70839 70919])
                    ("_symbol_c" variable nil (reparse-symbol indented_block_body) [70924 70940])
                    ("_symbol_f" variable nil (reparse-symbol indented_block_body) [70945 70975])
                    ("_symbol_set" variable nil (reparse-symbol indented_block_body) [70980 71016])
                    ("_symbol_get" variable nil (reparse-symbol indented_block_body) [71021 71053])
                    ("__init__" function
                       (:suite 
                          ( ("kwargs" variable nil (reparse-symbol indented_block_body) [70527 70579])
                            ("super" code nil (reparse-symbol indented_block_body) [70588 70637]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71072 71076])
                            ("args" variable nil (reparse-symbol function_parameters) [71078 71083])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [71085 71093]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [71059 71215]))                  
                :type "class")
                nil [70568 71215])
            ("property" type
               (:superclasses ("function")
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [71304 71318])
                    ("to_field_args" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71342 71346]))                          )
                        (reparse-symbol indented_block_body) [71324 71463])
                    ("_property_search" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71489 71493])
                            ("tobj" variable nil (reparse-symbol function_parameters) [71495 71499])
                            ("cr" variable nil (reparse-symbol function_parameters) [71501 71503])
                            ("uid" variable nil (reparse-symbol function_parameters) [71505 71508])
                            ("obj" variable nil (reparse-symbol function_parameters) [71510 71513])
                            ("name" variable nil (reparse-symbol function_parameters) [71515 71519])
                            ("domain" variable nil (reparse-symbol function_parameters) [71521 71527])
                            ("context" variable nil (reparse-symbol function_parameters) [71529 71536]))                          )
                        (reparse-symbol indented_block_body) [71468 71786])
                    ("_property_write" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71811 71815])
                            ("obj" variable nil (reparse-symbol function_parameters) [71817 71820])
                            ("cr" variable nil (reparse-symbol function_parameters) [71822 71824])
                            ("uid" variable nil (reparse-symbol function_parameters) [71826 71829])
                            ("id" variable nil (reparse-symbol function_parameters) [71831 71833])
                            ("prop_name" variable nil (reparse-symbol function_parameters) [71835 71844])
                            ("value" variable nil (reparse-symbol function_parameters) [71846 71851])
                            ("obj_dest" variable nil (reparse-symbol function_parameters) [71853 71861])
                            ("context" variable nil (reparse-symbol function_parameters) [71863 71870]))                          )
                        (reparse-symbol indented_block_body) [71791 72035])
                    ("_property_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72059 72063])
                            ("obj" variable nil (reparse-symbol function_parameters) [72065 72068])
                            ("cr" variable nil (reparse-symbol function_parameters) [72070 72072])
                            ("uid" variable nil (reparse-symbol function_parameters) [72074 72077])
                            ("ids" variable nil (reparse-symbol function_parameters) [72079 72082])
                            ("prop_names" variable nil (reparse-symbol function_parameters) [72084 72094])
                            ("obj_dest" variable nil (reparse-symbol function_parameters) [72096 72104])
                            ("context" variable nil (reparse-symbol function_parameters) [72106 72113]))                          )
                        (reparse-symbol indented_block_body) [72040 73100])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [72564 72682])
                            ("args" variable nil (reparse-symbol indented_block_body) [72690 72707])
                            ("args" code nil (reparse-symbol indented_block_body) [72716 72777])
                            ("super" code nil (reparse-symbol indented_block_body) [72786 73006]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [73118 73122])
                            ("args" variable nil (reparse-symbol function_parameters) [73124 73130]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [73105 73584]))                  
                :type "class")
                nil [71274 73584])
            ("column_info" type
               (:documentation " Struct containing details about an osv column, either one local to
        its model, or one inherited via _inherits.

        .. attribute:: name

            name of the column

        .. attribute:: column

            column instance, subclass of :class:`_column`

        .. attribute:: parent_model

            if the column is inherited, name of the model that contains it,
            ``None`` for local columns.

        .. attribute:: parent_column

            the name of the column containing the m2o relationship to the
            parent model that contains this column, ``None`` for local columns.

        .. attribute:: original_parent

            if the column is inherited, name of the original parent model that
            contains it i.e in case of multilevel inheritance, ``None`` for
            local columns.
    "
                :superclasses ("object")
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [74472 74554])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [74086 74102])
                            ("self" variable nil (reparse-symbol indented_block_body) [74111 74131])
                            ("self" variable nil (reparse-symbol indented_block_body) [74140 74172])
                            ("self" variable nil (reparse-symbol indented_block_body) [74181 74215])
                            ("self" variable nil (reparse-symbol indented_block_body) [74224 74262]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74573 74577])
                            ("name" variable nil (reparse-symbol function_parameters) [74579 74583])
                            ("column" variable nil (reparse-symbol function_parameters) [74585 74591])
                            ("parent_model" variable nil (reparse-symbol function_parameters) [74593 74605])
                            ("parent_column" variable nil (reparse-symbol function_parameters) [74612 74625])
                            ("original_parent" variable nil (reparse-symbol function_parameters) [74632 74647]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [74560 74840])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74857 74861]))                          )
                        (reparse-symbol indented_block_body) [74845 75042]))                  
                :type "class")
                nil [73586 75042]))          
    :file "fields.py"
    :pointmax 74533
    :fsize 75109
    :lastmodtime '(22569 64626 157962 964000)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!skyline!Development!odoo!mera!odoo-8.0-20160428!openerp!osv!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
