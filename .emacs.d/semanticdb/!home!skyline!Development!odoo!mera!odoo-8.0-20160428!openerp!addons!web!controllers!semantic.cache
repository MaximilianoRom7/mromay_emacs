;; Object controllers/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "controllers/"
  :tables (list 
   (semanticdb-table "main.py"
    :major-mode 'python-mode
    :tags 
        '( ("ast" include nil nil [26 36])
            ("base64" include nil nil [37 50])
            ("csv" include nil nil [51 61])
            ("functools" include nil nil [62 78])
            ("glob" include nil nil [79 90])
            ("itertools" include nil nil [91 107])
            ("jinja2" include nil nil [108 121])
            ("logging" include nil nil [122 136])
            ("operator" include nil nil [137 152])
            ("datetime" include nil nil [153 168])
            ("hashlib" include nil nil [169 183])
            ("os" include nil nil [184 193])
            ("re" include nil nil [194 203])
            ("simplejson" include nil nil [204 221])
            ("sys" include nil nil [222 232])
            ("time" include nil nil [233 244])
            ("urllib2" include nil nil [245 259])
            ("zlib" include nil nil [260 271])
            ("xml.etree" include nil nil [272 305])
            ("cStringIO" include nil nil [306 336])
            ("babel.messages.pofile" include nil nil [338 366])
            ("werkzeug.utils" include nil nil [367 388])
            ("werkzeug.wrappers" include nil nil [389 413])
            ("try" code nil nil [414 471])
            ("openerp" include nil nil [472 486])
            ("openerp.modules.registry" include nil nil [487 518])
            ("openerp.addons.base.ir.ir_qweb" include nil nil [519 596])
            ("openerp.modules" include nil nil [597 644])
            ("openerp.tools" include nil nil [645 687])
            ("openerp.tools.translate" include nil nil [688 725])
            ("openerp.tools" include nil nil [726 756])
            ("openerp" include nil nil [757 781])
            ("pdb" include nil nil [783 793])
            ("openerp.http" include nil nil [795 872])
            ("_logger" variable nil nil [874 911])
            ("pdb" include nil nil [913 923])
            ("if" code nil nil [925 1237])
            ("env" variable nil nil [1238 1294])
            ("env" variable nil nil [1295 1333])
            ("BUNDLE_MAXAGE" code nil nil [1400 1432])
            ("db_list" variable nil nil [1577 1599])
            ("db_monodb" variable nil nil [1601 1627])
            ("serialize_exception" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [1653 1654]))              ) nil [1629 2150])
            ("redirect_with_hash" function
               (:documentation "
        .. deprecated:: 8.0

        Use the ``http.redirect_with_hash()`` function instead.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [2174 2179])
                    ("kw" variable nil (reparse-symbol function_parameters) [2181 2185]))                  )
                nil [2151 2345])
            ("abort_and_redirect" function (:arguments 
              ( ("url" variable nil (reparse-symbol function_parameters) [2369 2372]))              ) nil [2346 2563])
            ("ensure_db" function (:arguments 
              ( ("redirect" variable nil (reparse-symbol function_parameters) [2578 2586]))              ) nil [2564 4846])
            ("module_installed" function nil nil [4847 5704])
            ("module_installed_bypass_session" function (:arguments 
              ( ("dbname" variable nil (reparse-symbol function_parameters) [5741 5747]))              ) nil [5705 6772])
            ("module_boot" function (:arguments 
              ( ("db" variable nil (reparse-symbol function_parameters) [6789 6791]))              ) nil [6773 7224])
            ("concat_xml" function
               (:documentation "Concatenate xml files

    :param list(str) file_list: list of files to check
    :returns: (concatenation_result, checksum)
    :rtype: (str, str)
    "
                :arguments 
                  ( ("file_list" variable nil (reparse-symbol function_parameters) [7240 7249]))                  )
                nil [7225 8074])
            ("fs2web" function
               (:documentation "convert FS path into web path"
                :arguments 
                  ( ("path" variable nil (reparse-symbol function_parameters) [8086 8090]))                  )
                nil [8075 8178])
            ("manifest_glob" function (:arguments 
              ( ("extension" variable nil (reparse-symbol function_parameters) [8197 8206])
                ("addons" variable nil (reparse-symbol function_parameters) [8208 8214])
                ("db" variable nil (reparse-symbol function_parameters) [8221 8223])
                ("include_remotes" variable nil (reparse-symbol function_parameters) [8230 8245]))              ) nil [8179 9033])
            ("manifest_list" function
               (:documentation " list ressources to load specifying either:
    mods: a comma separated string listing modules
    db: a database name (return all installed modules in that database)
    "
                :arguments 
                  ( ("extension" variable nil (reparse-symbol function_parameters) [9052 9061])
                    ("mods" variable nil (reparse-symbol function_parameters) [9063 9067])
                    ("db" variable nil (reparse-symbol function_parameters) [9074 9076])
                    ("debug" variable nil (reparse-symbol function_parameters) [9083 9088]))                  )
                nil [9034 9518])
            ("get_last_modified" function
               (:documentation " Returns the modification time of the most recently modified
    file provided

    :param list(str) files: names of files to check
    :return: most recent modification time amongst the fileset
    :rtype: datetime.datetime
    "
                :arguments 
                  ( ("files" variable nil (reparse-symbol function_parameters) [9541 9546]))                  )
                nil [9519 9975])
            ("make_conditional" function
               (:documentation " Makes the provided response conditional based upon the request,
    and mandates revalidation from clients

    Uses Werkzeug's own :meth:`ETagResponseMixin.make_conditional`, after
    setting ``last_modified`` and ``etag`` correctly on the response object

    :param response: Werkzeug response
    :type response: werkzeug.wrappers.Response
    :param datetime.datetime last_modified: last modification date of the response content
    :param str etag: some sort of checksum of the content (deep etag)
    :return: the response object provided
    :rtype: werkzeug.wrappers.Response
    "
                :arguments 
                  ( ("response" variable nil (reparse-symbol function_parameters) [9997 10005])
                    ("last_modified" variable nil (reparse-symbol function_parameters) [10007 10020])
                    ("etag" variable nil (reparse-symbol function_parameters) [10027 10031])
                    ("max_age" variable nil (reparse-symbol function_parameters) [10038 10045]))                  )
                nil [9976 10920])
            ("login_and_redirect" function (:arguments 
              ( ("db" variable nil (reparse-symbol function_parameters) [10944 10946])
                ("login" variable nil (reparse-symbol function_parameters) [10948 10953])
                ("key" variable nil (reparse-symbol function_parameters) [10955 10958])
                ("redirect_url" variable nil (reparse-symbol function_parameters) [10960 10972]))              ) nil [10921 11080])
            ("set_cookie_and_redirect" function (:arguments 
              ( ("redirect_url" variable nil (reparse-symbol function_parameters) [11109 11121]))              ) nil [11081 11251])
            ("login_redirect" function nil nil [11252 11651])
            ("load_actions_from_ir_values" function (:arguments 
              ( ("key" variable nil (reparse-symbol function_parameters) [11684 11687])
                ("key2" variable nil (reparse-symbol function_parameters) [11689 11693])
                ("models" variable nil (reparse-symbol function_parameters) [11695 11701])
                ("meta" variable nil (reparse-symbol function_parameters) [11703 11707]))              ) nil [11652 11916])
            ("clean_action" function (:arguments 
              ( ("action" variable nil (reparse-symbol function_parameters) [11934 11940]))              ) nil [11917 12156])
            ("generate_views" function
               (:documentation "
    While the server generates a sequence called \"views\" computing dependencies
    between a bunch of stuff for views coming directly from the database
    (the ``ir.actions.act_window model``), it's also possible for e.g. buttons
    to return custom view dictionaries generated on the fly.

    In that case, there is no ``views`` key available on the action.

    Since the web client relies on ``action['views']``, generate it here from
    ``view_mode`` and ``view_id``.

    Currently handles two different cases:

    * no view_id, multiple view_mode
    * single view_id, single view_mode

    :param dict action: action descriptor dictionary to generate a views key for
    "
                :arguments 
                  ( ("action" variable nil (reparse-symbol function_parameters) [12248 12254]))                  )
                nil [12229 13712])
            ("fix_view_modes" function
               (:documentation " For historical reasons, OpenERP has weird dealings in relation to
    view_mode and the view_type attribute (on window actions):

    * one of the view modes is ``tree``, which stands for both list views
      and tree views
    * the choice is made by checking ``view_type``, which is either
      ``form`` for a list view or ``tree`` for an actual tree view

    This methods simply folds the view_type into view_mode by adding a
    new view mode ``list`` which is the result of the ``tree`` view_mode
    in conjunction with the ``form`` view_type.

    TODO: this should go into the doc, some kind of \"peculiarities\" section

    :param dict action: an action descriptor
    :returns: nothing, the action is modified in place
    "
                :arguments 
                  ( ("action" variable nil (reparse-symbol function_parameters) [13732 13738]))                  )
                nil [13713 14936])
            ("_local_web_translations" function (:arguments 
              ( ("trans_file" variable nil (reparse-symbol function_parameters) [14965 14975]))              ) nil [14937 15304])
            ("xml2json_from_elementtree" function
               (:documentation " xml2json-direct
    Simple and straightforward XML-to-JSON converter in Python
    New BSD Licensed
    http://code.google.com/p/xml2json-direct/
    "
                :arguments 
                  ( ("el" variable nil (reparse-symbol function_parameters) [15335 15337])
                    ("preserve_whitespaces" variable nil (reparse-symbol function_parameters) [15339 15359]))                  )
                nil [15305 16139])
            ("content_disposition" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [16164 16172]))              ) nil [16140 16682])
            ("Home" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [16879 16910])
                    ("index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16925 16929])
                            ("s_action" variable nil (reparse-symbol function_parameters) [16931 16939])
                            ("db" variable nil (reparse-symbol function_parameters) [16946 16948])
                            ("kw" variable nil (reparse-symbol function_parameters) [16955 16959]))                          )
                        (reparse-symbol indented_block_body) [16915 17043])
                    ("" code nil (reparse-symbol indented_block_body) [17059 17093])
                    ("web_client" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17113 17117])
                            ("s_action" variable nil (reparse-symbol function_parameters) [17119 17127])
                            ("kw" variable nil (reparse-symbol function_parameters) [17134 17138]))                          )
                        (reparse-symbol indented_block_body) [17098 17645])
                    ("" code nil (reparse-symbol indented_block_body) [17661 17706])
                    ("web_db_redirect" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17731 17735])
                            ("redirect" variable nil (reparse-symbol function_parameters) [17737 17745])
                            ("kw" variable nil (reparse-symbol function_parameters) [17751 17755]))                          )
                        (reparse-symbol indented_block_body) [17711 17832])
                    ("" code nil (reparse-symbol indented_block_body) [17848 17888])
                    ("web_login" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17907 17911])
                            ("redirect" variable nil (reparse-symbol function_parameters) [17913 17921])
                            ("kw" variable nil (reparse-symbol function_parameters) [17928 17932]))                          )
                        (reparse-symbol indented_block_body) [17893 19210])
                    ("" code nil (reparse-symbol indented_block_body) [19227 19263])
                    ("login" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19278 19282])
                            ("db" variable nil (reparse-symbol function_parameters) [19284 19286])
                            ("login" variable nil (reparse-symbol function_parameters) [19288 19293])
                            ("key" variable nil (reparse-symbol function_parameters) [19295 19298])
                            ("redirect" variable nil (reparse-symbol function_parameters) [19300 19308])
                            ("kw" variable nil (reparse-symbol function_parameters) [19317 19321]))                          )
                        (reparse-symbol indented_block_body) [19268 19487])
                    ("" code nil (reparse-symbol indented_block_body) [19503 19604])
                    ("js_bundle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19623 19627])
                            ("xmlid" variable nil (reparse-symbol function_parameters) [19629 19634])
                            ("version" variable nil (reparse-symbol function_parameters) [19636 19643])
                            ("kw" variable nil (reparse-symbol function_parameters) [19650 19654]))                          )
                        (reparse-symbol indented_block_body) [19609 19975])
                    ("" code nil (reparse-symbol indented_block_body) [19991 20143])
                    ("css_bundle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20163 20167])
                            ("xmlid" variable nil (reparse-symbol function_parameters) [20169 20174])
                            ("version" variable nil (reparse-symbol function_parameters) [20176 20183])
                            ("page" variable nil (reparse-symbol function_parameters) [20190 20194])
                            ("kw" variable nil (reparse-symbol function_parameters) [20201 20205]))                          )
                        (reparse-symbol indented_block_body) [20148 20517]))                  
                :type "class")
                nil [16834 20517])
            ("WebClient" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [20568 20620])
                    ("csslist" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20637 20641])
                            ("mods" variable nil (reparse-symbol function_parameters) [20643 20647]))                          )
                        (reparse-symbol indented_block_body) [20625 20702])
                    ("" code nil (reparse-symbol indented_block_body) [20718 20769])
                    ("jslist" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20785 20789])
                            ("mods" variable nil (reparse-symbol function_parameters) [20791 20795]))                          )
                        (reparse-symbol indented_block_body) [20774 20849])
                    ("" code nil (reparse-symbol indented_block_body) [20865 20914])
                    ("qweb" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20928 20932])
                            ("mods" variable nil (reparse-symbol function_parameters) [20934 20938])
                            ("db" variable nil (reparse-symbol function_parameters) [20945 20947]))                          )
                        (reparse-symbol indented_block_body) [20919 21439])
                    ("" code nil (reparse-symbol indented_block_body) [21455 21522])
                    ("bootstrap_translations" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21554 21558])
                            ("mods" variable nil (reparse-symbol function_parameters) [21560 21564]))                          
                        :documentation " Load local translations from *.po files, as a temporary solution
            until we have established a valid session. This is meant only
            for translating the login page and db management chrome, using
            the browser's language. ")
                        (reparse-symbol indented_block_body) [21527 22680])
                    ("" code nil (reparse-symbol indented_block_body) [22696 22753])
                    ("translations" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22775 22779])
                            ("mods" variable nil (reparse-symbol function_parameters) [22781 22785])
                            ("lang" variable nil (reparse-symbol function_parameters) [22792 22796]))                          )
                        (reparse-symbol indented_block_body) [22758 24690])
                    ("" code nil (reparse-symbol indented_block_body) [24706 24763])
                    ("version_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24785 24789]))                          )
                        (reparse-symbol indented_block_body) [24768 24844])
                    ("" code nil (reparse-symbol indented_block_body) [24860 24900])
                    ("index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24915 24919])
                            ("mod" variable nil (reparse-symbol function_parameters) [24921 24924])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [24931 24939]))                          )
                        (reparse-symbol indented_block_body) [24905 24991]))                  
                :type "class")
                nil [20518 24991])
            ("Proxy" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [25038 25083])
                    ("load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25097 25101])
                            ("path" variable nil (reparse-symbol function_parameters) [25103 25107]))                          
                        :documentation " Proxies an HTTP request through a JSON request.

        It is strongly recommended to not request binary files through this,
        as the result will be a binary data blob as well.

        :param path: actual request path
        :return: file content
        ")
                        (reparse-symbol indented_block_body) [25088 25626]))                  
                :type "class")
                nil [24992 25626])
            ("Database" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [25676 25728])
                    ("selector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25746 25750])
                            ("kw" variable nil (reparse-symbol function_parameters) [25752 25756]))                          )
                        (reparse-symbol indented_block_body) [25733 26150])
                    ("" code nil (reparse-symbol indented_block_body) [26166 26217])
                    ("manager" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26234 26238])
                            ("kw" variable nil (reparse-symbol function_parameters) [26240 26244]))                          )
                        (reparse-symbol indented_block_body) [26222 26491])
                    ("" code nil (reparse-symbol indented_block_body) [26507 26559])
                    ("get_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26577 26581]))                          )
                        (reparse-symbol indented_block_body) [26564 26857])
                    ("" code nil (reparse-symbol indented_block_body) [26873 26923])
                    ("create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26939 26943])
                            ("fields" variable nil (reparse-symbol function_parameters) [26945 26951]))                          )
                        (reparse-symbol indented_block_body) [26928 27423])
                    ("" code nil (reparse-symbol indented_block_body) [27439 27492])
                    ("duplicate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27511 27515])
                            ("fields" variable nil (reparse-symbol function_parameters) [27517 27523]))                          )
                        (reparse-symbol indented_block_body) [27497 27828])
                    ("" code nil (reparse-symbol indented_block_body) [27844 27892])
                    ("drop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27906 27910])
                            ("fields" variable nil (reparse-symbol function_parameters) [27912 27918]))                          )
                        (reparse-symbol indented_block_body) [27897 28461])
                    ("" code nil (reparse-symbol indented_block_body) [28477 28527])
                    ("backup" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28543 28547])
                            ("backup_db" variable nil (reparse-symbol function_parameters) [28549 28558])
                            ("backup_pwd" variable nil (reparse-symbol function_parameters) [28560 28570])
                            ("token" variable nil (reparse-symbol function_parameters) [28572 28577])
                            ("backup_format" variable nil (reparse-symbol function_parameters) [28579 28592]))                          )
                        (reparse-symbol indented_block_body) [28532 29460])
                    ("" code nil (reparse-symbol indented_block_body) [29476 29527])
                    ("restore" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29544 29548])
                            ("db_file" variable nil (reparse-symbol function_parameters) [29550 29557])
                            ("restore_pwd" variable nil (reparse-symbol function_parameters) [29559 29570])
                            ("new_db" variable nil (reparse-symbol function_parameters) [29572 29578])
                            ("mode" variable nil (reparse-symbol function_parameters) [29580 29584]))                          )
                        (reparse-symbol indented_block_body) [29532 29884])
                    ("" code nil (reparse-symbol indented_block_body) [29900 29959])
                    ("change_password" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29984 29988])
                            ("fields" variable nil (reparse-symbol function_parameters) [29990 29996]))                          )
                        (reparse-symbol indented_block_body) [29964 30521]))                  
                :type "class")
                nil [25627 30521])
            ("Session" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("session_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30576 30580]))                          )
                        (reparse-symbol indented_block_body) [30559 31001])
                    ("" code nil (reparse-symbol indented_block_body) [31017 31076])
                    ("get_session_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31102 31106]))                          )
                        (reparse-symbol indented_block_body) [31081 31221])
                    ("" code nil (reparse-symbol indented_block_body) [31237 31292])
                    ("authenticate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31314 31318])
                            ("db" variable nil (reparse-symbol function_parameters) [31320 31322])
                            ("login" variable nil (reparse-symbol function_parameters) [31324 31329])
                            ("password" variable nil (reparse-symbol function_parameters) [31331 31339])
                            ("base_location" variable nil (reparse-symbol function_parameters) [31341 31354]))                          )
                        (reparse-symbol indented_block_body) [31297 31456])
                    ("" code nil (reparse-symbol indented_block_body) [31472 31530])
                    ("change_password" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31555 31559])
                            ("fields" variable nil (reparse-symbol function_parameters) [31561 31567]))                          )
                        (reparse-symbol indented_block_body) [31535 32557])
                    ("" code nil (reparse-symbol indented_block_body) [32573 32629])
                    ("get_lang_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32652 32656]))                          )
                        (reparse-symbol indented_block_body) [32634 32823])
                    ("" code nil (reparse-symbol indented_block_body) [32839 32889])
                    ("modules" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32906 32910]))                          )
                        (reparse-symbol indented_block_body) [32894 33041])
                    ("" code nil (reparse-symbol indented_block_body) [33057 33119])
                    ("save_session_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33148 33152])
                            ("the_action" variable nil (reparse-symbol function_parameters) [33154 33164]))                          
                        :documentation "
        This method store an action object in the session object and returns an integer
        identifying that action. The method get_session_action() can be used to get
        back the action.

        :param the_action: The action to save in the session.
        :type the_action: anything
        :return: A key identifying the saved action.
        :rtype: integer
        ")
                        (reparse-symbol indented_block_body) [33124 33622])
                    ("" code nil (reparse-symbol indented_block_body) [33638 33699])
                    ("get_session_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33727 33731])
                            ("key" variable nil (reparse-symbol function_parameters) [33733 33736]))                          
                        :documentation "
        Gets back a previously saved action. This method can return None if the action
        was saved since too much time (this case should be handled in a smart way).

        :param key: The key given by save_session_action()
        :type key: integer
        :return: The saved action or None.
        :rtype: anything
        ")
                        (reparse-symbol indented_block_body) [33704 34140])
                    ("" code nil (reparse-symbol indented_block_body) [34156 34204])
                    ("check" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34219 34223]))                          )
                        (reparse-symbol indented_block_body) [34209 34285])
                    ("" code nil (reparse-symbol indented_block_body) [34301 34351])
                    ("destroy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34368 34372]))                          )
                        (reparse-symbol indented_block_body) [34356 34408])
                    ("" code nil (reparse-symbol indented_block_body) [34424 34473])
                    ("logout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34489 34493])
                            ("redirect" variable nil (reparse-symbol function_parameters) [34495 34503]))                          )
                        (reparse-symbol indented_block_body) [34478 34612]))                  
                :type "class")
                nil [30522 34612])
            ("Menu" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [34658 34713])
                    ("load_needaction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34738 34742])
                            ("menu_ids" variable nil (reparse-symbol function_parameters) [34744 34752]))                          
                        :documentation " Loads needaction counters for specific menu ids.

            :return: needaction data
            :rtype: dict(menu_id: {'needaction_enabled': boolean, 'needaction_counter': int})
        ")
                        (reparse-symbol indented_block_body) [34718 35058]))                  
                :type "class")
                nil [34613 35058])
            ("DataSet" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [35107 35161])
                    ("search_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35182 35186])
                            ("model" variable nil (reparse-symbol function_parameters) [35188 35193])
                            ("fields" variable nil (reparse-symbol function_parameters) [35195 35201])
                            ("offset" variable nil (reparse-symbol function_parameters) [35209 35215])
                            ("limit" variable nil (reparse-symbol function_parameters) [35219 35224])
                            ("domain" variable nil (reparse-symbol function_parameters) [35232 35238])
                            ("sort" variable nil (reparse-symbol function_parameters) [35245 35249]))                          )
                        (reparse-symbol indented_block_body) [35166 35336])
                    ("do_search_read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35359 35363])
                            ("model" variable nil (reparse-symbol function_parameters) [35365 35370])
                            ("fields" variable nil (reparse-symbol function_parameters) [35372 35378])
                            ("offset" variable nil (reparse-symbol function_parameters) [35386 35392])
                            ("limit" variable nil (reparse-symbol function_parameters) [35396 35401])
                            ("domain" variable nil (reparse-symbol function_parameters) [35409 35415])
                            ("sort" variable nil (reparse-symbol function_parameters) [35446 35450]))                          
                        :documentation " Performs a search() followed by a read() (if needed) using the
        provided search criteria

        :param str model: the name of the model to search on
        :param fields: a list of the fields to return in the result records
        :type fields: [str]
        :param int offset: from which index should the results start being returned
        :param int limit: the maximum number of records to return
        :param list domain: the search domain for the query
        :param list sort: sorting directives
        :returns: A structure (dict) with two keys: ids (all the ids matching
                  the (domain, context) pair) and records (paginated records
                  matching fields selection set)
        :rtype: list
        ")
                        (reparse-symbol indented_block_body) [35340 36789])
                    ("" code nil (reparse-symbol indented_block_body) [36805 36852])
                    ("load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36866 36870])
                            ("model" variable nil (reparse-symbol function_parameters) [36872 36877])
                            ("id" variable nil (reparse-symbol function_parameters) [36879 36881])
                            ("fields" variable nil (reparse-symbol function_parameters) [36883 36889]))                          )
                        (reparse-symbol indented_block_body) [36857 37072])
                    ("call_common" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37093 37097])
                            ("model" variable nil (reparse-symbol function_parameters) [37099 37104])
                            ("method" variable nil (reparse-symbol function_parameters) [37106 37112])
                            ("args" variable nil (reparse-symbol function_parameters) [37114 37118])
                            ("domain_id" variable nil (reparse-symbol function_parameters) [37120 37129])
                            ("context_id" variable nil (reparse-symbol function_parameters) [37136 37146]))                          )
                        (reparse-symbol indented_block_body) [37077 37208])
                    ("_call_kw" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37226 37230])
                            ("model" variable nil (reparse-symbol function_parameters) [37232 37237])
                            ("method" variable nil (reparse-symbol function_parameters) [37239 37245])
                            ("args" variable nil (reparse-symbol function_parameters) [37247 37251])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [37253 37259]))                          )
                        (reparse-symbol indented_block_body) [37213 37531])
                    ("" code nil (reparse-symbol indented_block_body) [37547 37594])
                    ("call" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37608 37612])
                            ("model" variable nil (reparse-symbol function_parameters) [37614 37619])
                            ("method" variable nil (reparse-symbol function_parameters) [37621 37627])
                            ("args" variable nil (reparse-symbol function_parameters) [37629 37633])
                            ("domain_id" variable nil (reparse-symbol function_parameters) [37635 37644])
                            ("context_id" variable nil (reparse-symbol function_parameters) [37651 37661]))                          )
                        (reparse-symbol indented_block_body) [37599 37723])
                    ("" code nil (reparse-symbol indented_block_body) [37739 37827])
                    ("call_kw" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37844 37848])
                            ("model" variable nil (reparse-symbol function_parameters) [37850 37855])
                            ("method" variable nil (reparse-symbol function_parameters) [37857 37863])
                            ("args" variable nil (reparse-symbol function_parameters) [37865 37869])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [37871 37877])
                            ("path" variable nil (reparse-symbol function_parameters) [37879 37883]))                          )
                        (reparse-symbol indented_block_body) [37832 37973])
                    ("" code nil (reparse-symbol indented_block_body) [37989 38043])
                    ("call_button" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38064 38068])
                            ("model" variable nil (reparse-symbol function_parameters) [38070 38075])
                            ("method" variable nil (reparse-symbol function_parameters) [38077 38083])
                            ("args" variable nil (reparse-symbol function_parameters) [38085 38089])
                            ("domain_id" variable nil (reparse-symbol function_parameters) [38091 38100])
                            ("context_id" variable nil (reparse-symbol function_parameters) [38107 38117]))                          )
                        (reparse-symbol indented_block_body) [38048 38308])
                    ("" code nil (reparse-symbol indented_block_body) [38324 38380])
                    ("exec_workflow" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38403 38407])
                            ("model" variable nil (reparse-symbol function_parameters) [38409 38414])
                            ("id" variable nil (reparse-symbol function_parameters) [38416 38418])
                            ("signal" variable nil (reparse-symbol function_parameters) [38420 38426]))                          )
                        (reparse-symbol indented_block_body) [38385 38493])
                    ("" code nil (reparse-symbol indented_block_body) [38509 38562])
                    ("resequence" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38582 38586])
                            ("model" variable nil (reparse-symbol function_parameters) [38588 38593])
                            ("ids" variable nil (reparse-symbol function_parameters) [38595 38598])
                            ("field" variable nil (reparse-symbol function_parameters) [38600 38605])
                            ("offset" variable nil (reparse-symbol function_parameters) [38618 38624]))                          
                        :documentation " Re-sequences a number of records in the model, by their ids

        The re-sequencing starts at the first model of ``ids``, the sequence
        number is incremented by one after each record and starts at ``offset``

        :param ids: identifiers of the records to resequence, in the new sequence order
        :type ids: list(id)
        :param str field: field used for sequence specification, defaults to
                          \"sequence\"
        :param int offset: sequence number for first record in ``ids``, allows
                           starting the resequencing from an arbitrary number,
                           defaults to ``0``
        ")
                        (reparse-symbol indented_block_body) [38567 39557]))                  
                :type "class")
                nil [35059 39557])
            ("View" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [39603 39653])
                    ("add_custom" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39673 39677])
                            ("view_id" variable nil (reparse-symbol function_parameters) [39679 39686])
                            ("arch" variable nil (reparse-symbol function_parameters) [39688 39692]))                          )
                        (reparse-symbol indented_block_body) [39658 39947])
                    ("" code nil (reparse-symbol indented_block_body) [39963 40014])
                    ("undo_custom" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40035 40039])
                            ("view_id" variable nil (reparse-symbol function_parameters) [40041 40048])
                            ("reset" variable nil (reparse-symbol function_parameters) [40050 40055]))                          )
                        (reparse-symbol indented_block_body) [40019 40555]))                  
                :type "class")
                nil [39558 40555])
            ("TreeView" type
               (:superclasses ("View")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [40594 40644])
                    ("action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40660 40664])
                            ("model" variable nil (reparse-symbol function_parameters) [40666 40671])
                            ("id" variable nil (reparse-symbol function_parameters) [40673 40675]))                          )
                        (reparse-symbol indented_block_body) [40649 40794]))                  
                :type "class")
                nil [40556 40794])
            ("Binary" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [40842 40891])
                    ("image" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40906 40910])
                            ("model" variable nil (reparse-symbol function_parameters) [40912 40917])
                            ("id" variable nil (reparse-symbol function_parameters) [40919 40921])
                            ("field" variable nil (reparse-symbol function_parameters) [40923 40928])
                            ("kw" variable nil (reparse-symbol function_parameters) [40930 40934]))                          )
                        (reparse-symbol indented_block_body) [40896 43188])
                    ("placeholder" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43209 43213])
                            ("image" variable nil (reparse-symbol function_parameters) [43215 43220]))                          )
                        (reparse-symbol indented_block_body) [43193 43404])
                    ("" code nil (reparse-symbol indented_block_body) [43420 43470])
                    ("saveas" function
                       (:parent "dummy"
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43511 43515])
                            ("model" variable nil (reparse-symbol function_parameters) [43517 43522])
                            ("field" variable nil (reparse-symbol function_parameters) [43524 43529])
                            ("id" variable nil (reparse-symbol function_parameters) [43531 43533])
                            ("filename_field" variable nil (reparse-symbol function_parameters) [43540 43554])
                            ("kw" variable nil (reparse-symbol function_parameters) [43561 43565]))                          
                        :documentation " Download link for files stored as binary fields.

        If the ``id`` parameter is omitted, fetches the default value for the
        binary field (via ``default_get``), otherwise fetches the field for
        that precise record.

        :param str model: name of the model to fetch the binary from
        :param str field: binary field
        :param str id: id of the record from which to fetch the binary
        :param str filename_field: field holding the file's name, if any
        :returns: :class:`werkzeug.wrappers.Response`
        ")
                        (reparse-symbol indented_block_body) [43475 44988])
                    ("" code nil (reparse-symbol indented_block_body) [45004 45059])
                    ("saveas_ajax" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45105 45109])
                            ("data" variable nil (reparse-symbol function_parameters) [45111 45115])
                            ("token" variable nil (reparse-symbol function_parameters) [45117 45122]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [45064 46401])
                    ("" code nil (reparse-symbol indented_block_body) [46417 46465])
                    ("upload" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46506 46510])
                            ("callback" variable nil (reparse-symbol function_parameters) [46512 46520])
                            ("ufile" variable nil (reparse-symbol function_parameters) [46522 46527]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [46470 47118])
                    ("" code nil (reparse-symbol indented_block_body) [47134 47193])
                    ("upload_attachment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47245 47249])
                            ("callback" variable nil (reparse-symbol function_parameters) [47251 47259])
                            ("model" variable nil (reparse-symbol function_parameters) [47261 47266])
                            ("id" variable nil (reparse-symbol function_parameters) [47268 47270])
                            ("ufile" variable nil (reparse-symbol function_parameters) [47272 47277]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [47198 48197])
                    ("" code nil (reparse-symbol indented_block_body) [48213 48332])
                    ("company_logo" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48354 48358])
                            ("dbname" variable nil (reparse-symbol function_parameters) [48360 48366])
                            ("kw" variable nil (reparse-symbol function_parameters) [48373 48377]))                          )
                        (reparse-symbol indented_block_body) [48337 49825]))                  
                :type "class")
                nil [40795 49825])
            ("Action" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [49873 49919])
                    ("load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49933 49937])
                            ("action_id" variable nil (reparse-symbol function_parameters) [49939 49948])
                            ("do_not_eval" variable nil (reparse-symbol function_parameters) [49950 49961])
                            ("additional_context" variable nil (reparse-symbol function_parameters) [49969 49987]))                          )
                        (reparse-symbol indented_block_body) [49924 51023])
                    ("" code nil (reparse-symbol indented_block_body) [51039 51084])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51097 51101])
                            ("action_id" variable nil (reparse-symbol function_parameters) [51103 51112]))                          )
                        (reparse-symbol indented_block_body) [51089 51341]))                  
                :type "class")
                nil [49826 51341])
            ("Export" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [51389 51438])
                    ("formats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51455 51459]))                          
                        :documentation " Returns all valid export formats

        :returns: for each export format, a pair of identifier and printable name
        :rtype: [(str, str)]
        ")
                        (reparse-symbol indented_block_body) [51443 51792])
                    ("fields_get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51812 51816])
                            ("model" variable nil (reparse-symbol function_parameters) [51818 51823]))                          )
                        (reparse-symbol indented_block_body) [51797 51951])
                    ("" code nil (reparse-symbol indented_block_body) [51967 52019])
                    ("get_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52039 52043])
                            ("model" variable nil (reparse-symbol function_parameters) [52045 52050])
                            ("prefix" variable nil (reparse-symbol function_parameters) [52052 52058])
                            ("parent_name" variable nil (reparse-symbol function_parameters) [52063 52074])
                            ("import_compat" variable nil (reparse-symbol function_parameters) [52099 52112])
                            ("parent_field_type" variable nil (reparse-symbol function_parameters) [52119 52136])
                            ("exclude" variable nil (reparse-symbol function_parameters) [52162 52169]))                          )
                        (reparse-symbol indented_block_body) [52024 54038])
                    ("" code nil (reparse-symbol indented_block_body) [54054 54104])
                    ("namelist" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54122 54126])
                            ("model" variable nil (reparse-symbol function_parameters) [54128 54133])
                            ("export_id" variable nil (reparse-symbol function_parameters) [54135 54144]))                          )
                        (reparse-symbol indented_block_body) [54109 54690])
                    ("fields_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [54711 54715])
                            ("model" variable nil (reparse-symbol function_parameters) [54717 54722])
                            ("export_fields" variable nil (reparse-symbol function_parameters) [54724 54737]))                          )
                        (reparse-symbol indented_block_body) [54695 57299])
                    ("graft_subfields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57324 57328])
                            ("model" variable nil (reparse-symbol function_parameters) [57330 57335])
                            ("prefix" variable nil (reparse-symbol function_parameters) [57337 57343])
                            ("prefix_string" variable nil (reparse-symbol function_parameters) [57345 57358])
                            ("fields" variable nil (reparse-symbol function_parameters) [57360 57366]))                          )
                        (reparse-symbol indented_block_body) [57304 57587]))                  
                :type "class")
                nil [51342 57587])
            ("ExportFormat" type
               (:superclasses ("object")
                :members 
                  ( ("raw_data" variable nil (reparse-symbol indented_block_body) [57620 57636])
                    ("content_type" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57673 57677]))                          
                        :documentation " Provides the format's content type ")
                        (reparse-symbol indented_block_body) [57642 57767])
                    ("filename" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57785 57789])
                            ("base" variable nil (reparse-symbol function_parameters) [57791 57795]))                          
                        :documentation " Creates a valid filename for the format (with extension) from the
         provided base name (exension-less)
        ")
                        (reparse-symbol indented_block_body) [57772 57968])
                    ("from_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57987 57991])
                            ("fields" variable nil (reparse-symbol function_parameters) [57993 57999])
                            ("rows" variable nil (reparse-symbol function_parameters) [58001 58005]))                          
                        :documentation " Conversion method from OpenERP's export data to whatever the
        current export class outputs

        :params list fields: a list of fields to export
        :params list rows: a list of records to export
        :returns:
        :rtype: bytes
        ")
                        (reparse-symbol indented_block_body) [57973 58318])
                    ("base" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58332 58336])
                            ("data" variable nil (reparse-symbol function_parameters) [58338 58342])
                            ("token" variable nil (reparse-symbol function_parameters) [58344 58349]))                          )
                        (reparse-symbol indented_block_body) [58323 59538]))                  
                :type "class")
                nil [57588 59538])
            ("CSVExport" type
               (:superclasses ("ExportFormat" "http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [59603 59648])
                    ("index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59688 59692])
                            ("data" variable nil (reparse-symbol function_parameters) [59694 59698])
                            ("token" variable nil (reparse-symbol function_parameters) [59700 59705]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [59653 59746])
                    ("content_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59782 59786]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [59751 59828])
                    ("filename" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59846 59850])
                            ("base" variable nil (reparse-symbol function_parameters) [59852 59856]))                          )
                        (reparse-symbol indented_block_body) [59833 59888])
                    ("from_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59907 59911])
                            ("fields" variable nil (reparse-symbol function_parameters) [59913 59919])
                            ("rows" variable nil (reparse-symbol function_parameters) [59921 59925]))                          )
                        (reparse-symbol indented_block_body) [59893 60521]))                  
                :type "class")
                nil [59539 60521])
            ("ExcelExport" type
               (:superclasses ("ExportFormat" "http.Controller")
                :members 
                  ( ("raw_data" variable nil (reparse-symbol indented_block_body) [60647 60662])
                    ("" code nil (reparse-symbol indented_block_body) [60679 60724])
                    ("index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60764 60768])
                            ("data" variable nil (reparse-symbol function_parameters) [60770 60774])
                            ("token" variable nil (reparse-symbol function_parameters) [60776 60781]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [60729 60822])
                    ("content_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60858 60862]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [60827 60907])
                    ("filename" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60925 60929])
                            ("base" variable nil (reparse-symbol function_parameters) [60931 60935]))                          )
                        (reparse-symbol indented_block_body) [60912 60967])
                    ("from_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60986 60990])
                            ("fields" variable nil (reparse-symbol function_parameters) [60992 60998])
                            ("rows" variable nil (reparse-symbol function_parameters) [61000 61004]))                          )
                        (reparse-symbol indented_block_body) [60972 62172]))                  
                :type "class")
                nil [60522 62172])
            ("Reports" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("POLLING_DELAY" variable nil (reparse-symbol indented_block_body) [62209 62229])
                    ("TYPES_MAPPING" variable nil (reparse-symbol indented_block_body) [62234 62512])
                    ("" code nil (reparse-symbol indented_block_body) [62529 62570])
                    ("index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [62610 62614])
                            ("action" variable nil (reparse-symbol function_parameters) [62616 62622])
                            ("token" variable nil (reparse-symbol function_parameters) [62624 62629]))                          
                        :decorators 
                          ( ("serialize_exception" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [62575 64742]))                  
                :type "class")
                nil [62173 64742])
            ("Apps" type
               (:superclasses ("http.Controller")
                :members 
                  ( ("" code nil (reparse-symbol indented_block_body) [64787 64815])
                    ("get_app_url" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [64836 64840])
                            ("req" variable nil (reparse-symbol function_parameters) [64842 64845])
                            ("app" variable nil (reparse-symbol function_parameters) [64847 64850]))                          )
                        (reparse-symbol indented_block_body) [64820 65816]))                  
                :type "class")
                nil [64743 65816]))          
    :file "main.py"
    :pointmax 65873
    :fsize 65872
    :lastmodtime '(22562 11024 149696 732000)
    :unmatched-syntax '((NAME 65700 . 65705) (IF 65717 . 65719) (ELSE 65730 . 65734) (NAME 41305 . 41307) (IF 41315 . 41317) (ELSE 41325 . 41329))
    )
   )
  :file "!home!skyline!Development!odoo!mera!odoo-8.0-20160428!openerp!addons!web!controllers!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
