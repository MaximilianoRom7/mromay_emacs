;; Object tools/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "tools/"
  :tables (list 
   (semanticdb-table "func.py"
    :major-mode 'python-mode
    :tags 
        '( ("__all__" variable nil nil [1047 1107])
            ("functools" include nil nil [1109 1136])
            ("inspect" include nil nil [1137 1170])
            ("lazy_property" type
               (:documentation " Decorator for a lazy property of an object, i.e., an object attribute
        that is determined by the result of a method call evaluated once. To
        reevaluate the property, simply delete the attribute on the object, and
        get it again.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1505 1521]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1484 1488])
                            ("fget" variable nil (reparse-symbol function_parameters) [1490 1494]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1471 1522])
                    ("__get__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1539 1543])
                            ("obj" variable nil (reparse-symbol function_parameters) [1545 1548])
                            ("cls" variable nil (reparse-symbol function_parameters) [1550 1553]))                          )
                        (reparse-symbol indented_block_body) [1527 1704])
                    ("__doc__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1735 1739]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1709 1775])
                    ("reset_all" function
                       (:typemodifiers ("static")
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("obj" variable nil (reparse-symbol function_parameters) [1812 1815]))                          
                        :documentation " Reset all lazy properties on the instance `obj`. ")
                        (reparse-symbol indented_block_body) [1780 2076]))                  
                :type "class")
                nil [1173 2076])
            ("synchronized" function (:arguments 
              ( ("lock_attr" variable nil (reparse-symbol function_parameters) [2095 2104]))              ) nil [2078 2444])
            ("frame_codeinfo" function
               (:documentation " Return a (filename, line) pair for a previous frame .
        @return (filename, lineno) where lineno is either int or string==''
    "
                :arguments 
                  ( ("fframe" variable nil (reparse-symbol function_parameters) [2464 2470])
                    ("back" variable nil (reparse-symbol function_parameters) [2472 2476]))                  )
                nil [2445 2998])
            ("compose" function
               (:documentation " Composes the callables ``a`` and ``b``. ``compose(a, b)(*args)`` is
    equivalent to ``a(b(*args))``.

    Can be used as a decorator by partially applying ``a``::

         @partial(compose, a)
         def b():
            ...
    "
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [3011 3012])
                    ("b" variable nil (reparse-symbol function_parameters) [3014 3015]))                  )
                nil [2999 3368])
            ("_ClassProperty" type
               (:superclasses ("property")
                :members 
                  ( ("__get__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3418 3422])
                            ("cls" variable nil (reparse-symbol function_parameters) [3424 3427])
                            ("owner" variable nil (reparse-symbol function_parameters) [3429 3434]))                          )
                        (reparse-symbol indented_block_body) [3406 3485]))                  
                :type "class")
                nil [3370 3485])
            ("classproperty" function (:arguments 
              ( ("func" variable nil (reparse-symbol function_parameters) [3504 3508]))              ) nil [3486 3556]))          
    :file "func.py"
    :pointmax 3623
    :fsize 3622
    :lastmodtime '(21585 36365 0 0)
    :unmatched-syntax 'nil
    )
   )
  :file "!home!skyline!Development!odoo!mera!odoo-8.0-20160428!openerp!tools!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
