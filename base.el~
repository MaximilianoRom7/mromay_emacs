
(setq auto-revert-mode t)
(setq global-auto-revert-mode t)

(global-auto-revert-mode t)

(setq package-archives
      '(("gnu" . "https://elpa.gnu.org/packages/")
	("marmalade" . "https://marmalade-repo.org/packages/")
	("melpa" . "https://melpa.org/packages/")))

(defun mydired-sort ()
  "Sort dired listings with directories first."
  (save-excursion
    (let (buffer-read-only)
      (forward-line 2)
      (sort-regexp-fields t "^.*$" "[ ]*." (point) (point-max)))
    (set-buffer-modified-p nil)))

(defadvice dired-readin
  (after dired-after-updating-hook first () activate)
  "Sort dired listings with directories first before adding marks."
  (mydired-sort))

(global-linum-mode 1)
(setq linum-format "%d   ")

(setq global-packages-dirs
      '("~/.emacs.d/elpa"))

(defun create-load-packages()
  (interactive)
  (cl-loop
   for path in global-packages-dirs do
   (setq packages-dirs (shell-command-to-string (concat "ls -d " path "/*/")))
   (mapcar #'(lambda(dir)
	       (if (not (string= dir ""))
		   (if (not (memq dir load-path))
		       (add-to-list 'load-path dir))))
	   (split-string packages-dirs "\n"))
   ))


(create-load-packages)

(require 'magit)
(require 'realgud)
(require 'recentf)
(require 'neotree)

;; just for testing
(global-set-key
 (kbd "C-x C-g")
 'create-load-packages)

(setq realgud-safe-mode nil)

(setq PDB_SKIP nil)

(defun toggle-env-pdb-skip ()
  (setq _LEVEL (read-from-minibuffer "PDB_LOCK level ?: "))
  (shell-command-to-string (concat "echo " _LEVEL " > /root/.pdb_lock"))
  (message (shell-command-to-string "cat /root/.pdb_lock")))

(global-set-key (kbd "C-x C-t") '(lambda () (interactive) (toggle-env-pdb-skip)))

(setq neo-window-fixed-size nil)
(global-set-key (kbd "C-x 4") '(lambda () (interactive) (neotree-toggle)))
(global-set-key (kbd "M-1") '(lambda () (interactive) (windmove-left)))
(global-set-key (kbd "M-2") '(lambda () (interactive) (windmove-right)))
(global-set-key (kbd "C-c <left>") '(lambda () (interactive) (windsize-left)))
(global-set-key (kbd "C-c <right>") '(lambda () (interactive) (windsize-right)))

(recentf-mode 1)

(setq recentf-max-menu-items 25)
(global-set-key (kbd "C-x g") 'goto-line)
(global-set-key "\C-x\ \C-r" 'recentf-open-files)
(global-set-key (kbd "C-c q") 'end-of-buffer)
(global-set-key [f8] 'neotree-toggle)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 (if (window-system) '(custom-enabled-themes (quote (manoj-dark))))
 '(package-selected-packages
   (quote
    (magit helm-swoop swoop windsize recentf-ext web-mode realgud neotree))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(neo-dir-link-face ((t (:foreground "magenta"))))
 '(neo-file-link-face ((t (:foreground "yellow")))))

(global-set-key (kbd "M-s M-i") '(lambda () (interactive) (multi-occur-in-matching-buffers)))

(global-set-key "\M-[1;5C"    'forward-word)
(global-set-key "\M-[1;5D"    'backward-word)

(defun pdb-odoo-debug
  (realgud:pdb "pdb2 /home/skyline/Development/odoo/mera/odoo-8.0-20160428/odoo.py --config=/home/skyline/Development/odoo/mera/odoo-8.0-20160428/odoo-server-debug.conf" t))

(global-set-key
 (kbd "C-x C-n")
 (lambda ()
   (interactive)
   (shell-command-to-string "ps ax | grep python | grep -E 'odoo\.py' | tr -s ' ' | cut -d ' ' -f1 | xargs -L1 kill -9")
   (condition-case nil
       (kill-buffer "*pdb odoo.py shell*")
     (error nil))
   (realgud:pdb "pdb2 /home/skyline/Development/odoo/mera/odoo-8.0-20170118/odoo.py --config=/home/skyline/Development/odoo/mera/odoo-8.0-20170118/odoo-server.conf" t)))


(global-set-key
 (kbd "C-x C-m")
 (lambda () (interactive)
   (shell-command-to-string "lsof -i | grep python | grep LISTEN | grep ':80' | tr -s ' ' | cut -d ' ' -f2 | xargs -L1 kill -9")
   (sit-for 1)
   (condition-case nil
       (kill-buffer "*pdb odoo-bin shell*")
     (error nil))
   (switch-to-buffer "odoo-bin")
   (realgud:pdb
    (concat "python2 -m pdb "
	    "/usr/local/lib/python2.7"
	    "/dist-packages/odoo-10.0.post20170303-py2.7.egg"
	    "/odoo/odoo-bin --config="
	    "/usr/local/lib/python2.7"
	    "/dist-packages/odoo-10.0.post20170303-py2.7.egg"
	    "/odoo/odoo-server.conf --db-filter=odoo10-*") t)
   ))


(global-set-key
 (kbd "C-x C-m")
 (lambda () (interactive)
   (shell-command-to-string "lsof -i | grep python | grep LISTEN | grep ':80' | tr -s ' ' | cut -d ' ' -f2 | xargs -L1 kill -9")
   (sit-for 1)
   (condition-case nil
       (kill-buffer "*pdb odoo-bin shell*")
     (error nil))
   (switch-to-buffer "odoo-bin")
   (realgud:pdb
    (concat "python2 -m pdb "
	    "/usr/local/lib/python2.7"
	    "/dist-packages/odoo-10.0.post20170303-py2.7.egg"
	    "/odoo/odoo-bin --config="
	    "/usr/local/lib/python2.7"
	    "/dist-packages/odoo-10.0.post20170303-py2.7.egg"
	    "/odoo/odoo-server.conf --db-filter=odoo10-*") t)
   ))

(global-set-key
 (kbd "C-x C-o")
 (lambda () (interactive)
   (shell-command-to-string "lsof -i | grep python | grep LISTEN | grep ':80' | tr -s ' ' | cut -d ' ' -f2 | xargs -L1 kill -9")
   ;; (sit-for 1)
   (condition-case nil
       (kill-buffer "*pdb start_odoo.py shell*")
     (error nil))
   (setq working_dir "/home/skyline/Development/odoo/planet/odoo")
   (setq working_dir_2
	 (concat
	  "/home/skyline/Development"
	  "/odoo/versions/odoo-8.0-20161012"))
   (realgud:pdb
    (concat "python2 -m pdb " working_dir "/odoo.py "
	    "--config " working_dir "/odoo-server.conf") t)
   ))



 ;; (require 'windsize)

 ;; right-char                                                                                                    ;; left-char
 ;; next-line
 ;; previous-line
 ;; (setq resize-keys-lock nil)
 ;;
 ;; (defun toggle-resize-keys ()
 ;;   (if (not resize-keys-lock)
 ;;       (progn
 ;;         (setq resize-keys-lock t)
 ;;         (message "move resize bugger ENABLED")
 ;;         (global-set-key (kbd "<left>")  (lambda () (interactive) (windsize-left)))
 ;;         (global-set-key (kbd "<down>")  (lambda () (interactive) (windsize-down)))
 ;;         (global-set-key (kbd "<right>") (lambda () (interactive) (windsize-right)))
 ;;         (global-set-key (kbd "<up>")    (lambda () (interactive) (windsize-up)))
 ;;         )
 ;;     (progn
 ;;       (setq resize-keys-lock nil)
 ;;       (message "move resize bugger DISABLED")
 ;;       (global-set-key (kbd "<left>")  (lambda () (interactive) (left-char)))
 ;;       (global-set-key (kbd "<down>")  (lambda () (interactive) (next-line)))
 ;;       (global-set-key (kbd "<right>") (lambda () (interactive) (right-char)))
 ;;       (global-set-key (kbd "<up>")    (lambda () (interactive) (previous-line)))
 ;;       )))
 ;;
 ;;
 ;; (global-set-key (kbd "C-x j") (lambda () (interactive) (toggle-resize-keys)))

 ;; (global-set-key (kbd "<up>") (lambda () (interactive) (previous-line)))
 ;; (global-set-key (kbd "<up>") (lambda () (interactive) (message "aaa")))


 ;; (load-library "realgud")


;; pdb2 /home/skyline/Development/versions/odoo10/bin/start-odoo

 (windmove-default-keybindings)

 ;; (global-set-key (kbd "C-c <left>")  'windmove-left)
 ;; (global-set-key (kbd "C-c <right>") 'windmove-right)
 ;; (global-set-key (kbd "C-c <up>")    'windmove-up)
 ;; (global-set-key (kbd "C-c <down>")  'windmove-down)



 ;; (add-hook 'find-file-hook (lambda () (setq buffer-read-only t)))


 (put 'set-goal-column 'disabled nil)
